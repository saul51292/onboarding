//
// Carousel1AnimationView.swift
// Generated by Core Animator version 1.3.1 on 8/26/16.
//
// DO NOT MODIFY THIS FILE. IT IS AUTO-GENERATED AND WILL BE OVERWRITTEN
//

import UIKit

@IBDesignable
class Carousel1AnimationView : UIView {


	var animationCompletions = Dictionary<CAAnimation, (Bool) -> Void>()
	var viewsByName: [String : UIView]!

	// - MARK: Life Cycle

	convenience init() {
		self.init(frame: CGRect(x: 0, y: 0, width: 750, height: 260))
	}

	override init(frame: CGRect) {
		super.init(frame: frame)
		self.setupHierarchy()
	}

	required init?(coder aDecoder: NSCoder) {
		super.init(coder: aDecoder)
		self.setupHierarchy()
	}

	// - MARK: Scaling

	override func layoutSubviews() {
		super.layoutSubviews()

		if let scalingView = self.viewsByName["__scaling__"] {
			var xScale = self.bounds.size.width / scalingView.bounds.size.width
			var yScale = self.bounds.size.height / scalingView.bounds.size.height
			switch contentMode {
			case .ScaleToFill:
				break
			case .ScaleAspectFill:
				let scale = max(xScale, yScale)
				xScale = scale
				yScale = scale
			default:
				let scale = min(xScale, yScale)
				xScale = scale
				yScale = scale
			}
			scalingView.transform = CGAffineTransformMakeScale(xScale, yScale)
			scalingView.center = CGPoint(x:CGRectGetMidX(self.bounds), y:CGRectGetMidY(self.bounds))
		}
	}

	// - MARK: Setup

	func setupHierarchy() {
		var viewsByName: [String : UIView] = [:]
		let bundle = NSBundle(forClass:self.dynamicType)
		let __scaling__ = UIView()
		__scaling__.bounds = CGRect(x:0, y:0, width:750, height:260)
		__scaling__.center = CGPoint(x:375.0, y:130.0)
		self.addSubview(__scaling__)
		viewsByName["__scaling__"] = __scaling__

		let _0026Layer1 = UIImageView()
		_0026Layer1.bounds = CGRect(x:0, y:0, width:411.0, height:260.0)
		var img0026Layer1: UIImage!
		if let imagePath = bundle.pathForResource("_0026_Layer-1.png", ofType:nil) {
			img0026Layer1 = UIImage(contentsOfFile:imagePath)
		}else {
			print("** Warning: Could not create image from '_0026_Layer-1.png'. Please make sure that it is added to the project directly (not in a folder reference).")
		}
		_0026Layer1.image = img0026Layer1
		_0026Layer1.contentMode = .Center
		_0026Layer1.layer.position = CGPoint(x:543.571, y:130.625)
		__scaling__.addSubview(_0026Layer1)
		viewsByName["_0026_Layer-1"] = _0026Layer1

		let _0025Layer2 = UIImageView()
		_0025Layer2.bounds = CGRect(x:0, y:0, width:411.0, height:260.0)
		var img0025Layer2: UIImage!
		if let imagePath = bundle.pathForResource("_0025_Layer-2.png", ofType:nil) {
			img0025Layer2 = UIImage(contentsOfFile:imagePath)
		}else {
			print("** Warning: Could not create image from '_0025_Layer-2.png'. Please make sure that it is added to the project directly (not in a folder reference).")
		}
		_0025Layer2.image = img0025Layer2
		_0025Layer2.contentMode = .Center
		_0025Layer2.layer.position = CGPoint(x:543.571, y:130.625)
		__scaling__.addSubview(_0025Layer2)
		viewsByName["_0025_Layer-2"] = _0025Layer2

		let _0024Layer3 = UIImageView()
		_0024Layer3.bounds = CGRect(x:0, y:0, width:411.0, height:260.0)
		var img0024Layer3: UIImage!
		if let imagePath = bundle.pathForResource("_0024_Layer-3.png", ofType:nil) {
			img0024Layer3 = UIImage(contentsOfFile:imagePath)
		}else {
			print("** Warning: Could not create image from '_0024_Layer-3.png'. Please make sure that it is added to the project directly (not in a folder reference).")
		}
		_0024Layer3.image = img0024Layer3
		_0024Layer3.contentMode = .Center
		_0024Layer3.layer.position = CGPoint(x:543.571, y:130.625)
		__scaling__.addSubview(_0024Layer3)
		viewsByName["_0024_Layer-3"] = _0024Layer3

		let _0023Layer4 = UIImageView()
		_0023Layer4.bounds = CGRect(x:0, y:0, width:411.0, height:260.0)
		var img0023Layer4: UIImage!
		if let imagePath = bundle.pathForResource("_0023_Layer-4.png", ofType:nil) {
			img0023Layer4 = UIImage(contentsOfFile:imagePath)
		}else {
			print("** Warning: Could not create image from '_0023_Layer-4.png'. Please make sure that it is added to the project directly (not in a folder reference).")
		}
		_0023Layer4.image = img0023Layer4
		_0023Layer4.contentMode = .Center
		_0023Layer4.layer.position = CGPoint(x:543.571, y:130.625)
		__scaling__.addSubview(_0023Layer4)
		viewsByName["_0023_Layer-4"] = _0023Layer4

		let _0022Layer5 = UIImageView()
		_0022Layer5.bounds = CGRect(x:0, y:0, width:411.0, height:260.0)
		var img0022Layer5: UIImage!
		if let imagePath = bundle.pathForResource("_0022_Layer-5.png", ofType:nil) {
			img0022Layer5 = UIImage(contentsOfFile:imagePath)
		}else {
			print("** Warning: Could not create image from '_0022_Layer-5.png'. Please make sure that it is added to the project directly (not in a folder reference).")
		}
		_0022Layer5.image = img0022Layer5
		_0022Layer5.contentMode = .Center
		_0022Layer5.layer.position = CGPoint(x:543.571, y:130.625)
		__scaling__.addSubview(_0022Layer5)
		viewsByName["_0022_Layer-5"] = _0022Layer5

		let _0021Layer6 = UIImageView()
		_0021Layer6.bounds = CGRect(x:0, y:0, width:411.0, height:260.0)
		var img0021Layer6: UIImage!
		if let imagePath = bundle.pathForResource("_0021_Layer-6.png", ofType:nil) {
			img0021Layer6 = UIImage(contentsOfFile:imagePath)
		}else {
			print("** Warning: Could not create image from '_0021_Layer-6.png'. Please make sure that it is added to the project directly (not in a folder reference).")
		}
		_0021Layer6.image = img0021Layer6
		_0021Layer6.contentMode = .Center
		_0021Layer6.layer.position = CGPoint(x:543.571, y:130.625)
		__scaling__.addSubview(_0021Layer6)
		viewsByName["_0021_Layer-6"] = _0021Layer6

		let _0020Layer7 = UIImageView()
		_0020Layer7.bounds = CGRect(x:0, y:0, width:411.0, height:260.0)
		var img0020Layer7: UIImage!
		if let imagePath = bundle.pathForResource("_0020_Layer-7.png", ofType:nil) {
			img0020Layer7 = UIImage(contentsOfFile:imagePath)
		}else {
			print("** Warning: Could not create image from '_0020_Layer-7.png'. Please make sure that it is added to the project directly (not in a folder reference).")
		}
		_0020Layer7.image = img0020Layer7
		_0020Layer7.contentMode = .Center
		_0020Layer7.layer.position = CGPoint(x:543.571, y:130.625)
		__scaling__.addSubview(_0020Layer7)
		viewsByName["_0020_Layer-7"] = _0020Layer7

		let _0019Layer8 = UIImageView()
		_0019Layer8.bounds = CGRect(x:0, y:0, width:411.0, height:260.0)
		var img0019Layer8: UIImage!
		if let imagePath = bundle.pathForResource("_0019_Layer-8.png", ofType:nil) {
			img0019Layer8 = UIImage(contentsOfFile:imagePath)
		}else {
			print("** Warning: Could not create image from '_0019_Layer-8.png'. Please make sure that it is added to the project directly (not in a folder reference).")
		}
		_0019Layer8.image = img0019Layer8
		_0019Layer8.contentMode = .Center
		_0019Layer8.layer.position = CGPoint(x:543.571, y:130.625)
		__scaling__.addSubview(_0019Layer8)
		viewsByName["_0019_Layer-8"] = _0019Layer8

		let _0018Layer9 = UIImageView()
		_0018Layer9.bounds = CGRect(x:0, y:0, width:411.0, height:260.0)
		var img0018Layer9: UIImage!
		if let imagePath = bundle.pathForResource("_0018_Layer-9.png", ofType:nil) {
			img0018Layer9 = UIImage(contentsOfFile:imagePath)
		}else {
			print("** Warning: Could not create image from '_0018_Layer-9.png'. Please make sure that it is added to the project directly (not in a folder reference).")
		}
		_0018Layer9.image = img0018Layer9
		_0018Layer9.contentMode = .Center
		_0018Layer9.layer.position = CGPoint(x:543.571, y:130.625)
		__scaling__.addSubview(_0018Layer9)
		viewsByName["_0018_Layer-9"] = _0018Layer9

		let _0017Layer10 = UIImageView()
		_0017Layer10.bounds = CGRect(x:0, y:0, width:411.0, height:260.0)
		var img0017Layer10: UIImage!
		if let imagePath = bundle.pathForResource("_0017_Layer-10.png", ofType:nil) {
			img0017Layer10 = UIImage(contentsOfFile:imagePath)
		}else {
			print("** Warning: Could not create image from '_0017_Layer-10.png'. Please make sure that it is added to the project directly (not in a folder reference).")
		}
		_0017Layer10.image = img0017Layer10
		_0017Layer10.contentMode = .Center
		_0017Layer10.layer.position = CGPoint(x:543.571, y:130.625)
		__scaling__.addSubview(_0017Layer10)
		viewsByName["_0017_Layer-10"] = _0017Layer10

		let _0016Layer11 = UIImageView()
		_0016Layer11.bounds = CGRect(x:0, y:0, width:411.0, height:260.0)
		var img0016Layer11: UIImage!
		if let imagePath = bundle.pathForResource("_0016_Layer-11.png", ofType:nil) {
			img0016Layer11 = UIImage(contentsOfFile:imagePath)
		}else {
			print("** Warning: Could not create image from '_0016_Layer-11.png'. Please make sure that it is added to the project directly (not in a folder reference).")
		}
		_0016Layer11.image = img0016Layer11
		_0016Layer11.contentMode = .Center
		_0016Layer11.layer.position = CGPoint(x:543.571, y:130.625)
		__scaling__.addSubview(_0016Layer11)
		viewsByName["_0016_Layer-11"] = _0016Layer11

		let _0015Layer12 = UIImageView()
		_0015Layer12.bounds = CGRect(x:0, y:0, width:411.0, height:260.0)
		var img0015Layer12: UIImage!
		if let imagePath = bundle.pathForResource("_0015_Layer-12.png", ofType:nil) {
			img0015Layer12 = UIImage(contentsOfFile:imagePath)
		}else {
			print("** Warning: Could not create image from '_0015_Layer-12.png'. Please make sure that it is added to the project directly (not in a folder reference).")
		}
		_0015Layer12.image = img0015Layer12
		_0015Layer12.contentMode = .Center
		_0015Layer12.layer.position = CGPoint(x:543.571, y:130.625)
		__scaling__.addSubview(_0015Layer12)
		viewsByName["_0015_Layer-12"] = _0015Layer12

		let _0014Layer13 = UIImageView()
		_0014Layer13.bounds = CGRect(x:0, y:0, width:411.0, height:260.0)
		var img0014Layer13: UIImage!
		if let imagePath = bundle.pathForResource("_0014_Layer-13.png", ofType:nil) {
			img0014Layer13 = UIImage(contentsOfFile:imagePath)
		}else {
			print("** Warning: Could not create image from '_0014_Layer-13.png'. Please make sure that it is added to the project directly (not in a folder reference).")
		}
		_0014Layer13.image = img0014Layer13
		_0014Layer13.contentMode = .Center
		_0014Layer13.layer.position = CGPoint(x:543.571, y:130.625)
		__scaling__.addSubview(_0014Layer13)
		viewsByName["_0014_Layer-13"] = _0014Layer13

		let _0013Layer14 = UIImageView()
		_0013Layer14.bounds = CGRect(x:0, y:0, width:411.0, height:260.0)
		var img0013Layer14: UIImage!
		if let imagePath = bundle.pathForResource("_0013_Layer-14.png", ofType:nil) {
			img0013Layer14 = UIImage(contentsOfFile:imagePath)
		}else {
			print("** Warning: Could not create image from '_0013_Layer-14.png'. Please make sure that it is added to the project directly (not in a folder reference).")
		}
		_0013Layer14.image = img0013Layer14
		_0013Layer14.contentMode = .Center
		_0013Layer14.layer.position = CGPoint(x:543.571, y:130.625)
		__scaling__.addSubview(_0013Layer14)
		viewsByName["_0013_Layer-14"] = _0013Layer14

		let _0012Layer15 = UIImageView()
		_0012Layer15.bounds = CGRect(x:0, y:0, width:411.0, height:260.0)
		var img0012Layer15: UIImage!
		if let imagePath = bundle.pathForResource("_0012_Layer-15.png", ofType:nil) {
			img0012Layer15 = UIImage(contentsOfFile:imagePath)
		}else {
			print("** Warning: Could not create image from '_0012_Layer-15.png'. Please make sure that it is added to the project directly (not in a folder reference).")
		}
		_0012Layer15.image = img0012Layer15
		_0012Layer15.contentMode = .Center
		_0012Layer15.layer.position = CGPoint(x:543.571, y:130.625)
		__scaling__.addSubview(_0012Layer15)
		viewsByName["_0012_Layer-15"] = _0012Layer15

		let _0011Layer16 = UIImageView()
		_0011Layer16.bounds = CGRect(x:0, y:0, width:411.0, height:260.0)
		var img0011Layer16: UIImage!
		if let imagePath = bundle.pathForResource("_0011_Layer-16.png", ofType:nil) {
			img0011Layer16 = UIImage(contentsOfFile:imagePath)
		}else {
			print("** Warning: Could not create image from '_0011_Layer-16.png'. Please make sure that it is added to the project directly (not in a folder reference).")
		}
		_0011Layer16.image = img0011Layer16
		_0011Layer16.contentMode = .Center
		_0011Layer16.layer.position = CGPoint(x:543.571, y:130.625)
		__scaling__.addSubview(_0011Layer16)
		viewsByName["_0011_Layer-16"] = _0011Layer16

		let _0010Layer17 = UIImageView()
		_0010Layer17.bounds = CGRect(x:0, y:0, width:411.0, height:260.0)
		var img0010Layer17: UIImage!
		if let imagePath = bundle.pathForResource("_0010_Layer-17.png", ofType:nil) {
			img0010Layer17 = UIImage(contentsOfFile:imagePath)
		}else {
			print("** Warning: Could not create image from '_0010_Layer-17.png'. Please make sure that it is added to the project directly (not in a folder reference).")
		}
		_0010Layer17.image = img0010Layer17
		_0010Layer17.contentMode = .Center
		_0010Layer17.layer.position = CGPoint(x:543.571, y:130.625)
		__scaling__.addSubview(_0010Layer17)
		viewsByName["_0010_Layer-17"] = _0010Layer17

		let _0009Layer18 = UIImageView()
		_0009Layer18.bounds = CGRect(x:0, y:0, width:411.0, height:260.0)
		var img0009Layer18: UIImage!
		if let imagePath = bundle.pathForResource("_0009_Layer-18.png", ofType:nil) {
			img0009Layer18 = UIImage(contentsOfFile:imagePath)
		}else {
			print("** Warning: Could not create image from '_0009_Layer-18.png'. Please make sure that it is added to the project directly (not in a folder reference).")
		}
		_0009Layer18.image = img0009Layer18
		_0009Layer18.contentMode = .Center
		_0009Layer18.layer.position = CGPoint(x:543.571, y:130.625)
		__scaling__.addSubview(_0009Layer18)
		viewsByName["_0009_Layer-18"] = _0009Layer18

		let _0008Layer19 = UIImageView()
		_0008Layer19.bounds = CGRect(x:0, y:0, width:411.0, height:260.0)
		var img0008Layer19: UIImage!
		if let imagePath = bundle.pathForResource("_0008_Layer-19.png", ofType:nil) {
			img0008Layer19 = UIImage(contentsOfFile:imagePath)
		}else {
			print("** Warning: Could not create image from '_0008_Layer-19.png'. Please make sure that it is added to the project directly (not in a folder reference).")
		}
		_0008Layer19.image = img0008Layer19
		_0008Layer19.contentMode = .Center
		_0008Layer19.layer.position = CGPoint(x:543.571, y:130.625)
		__scaling__.addSubview(_0008Layer19)
		viewsByName["_0008_Layer-19"] = _0008Layer19

		let _0007Layer20 = UIImageView()
		_0007Layer20.bounds = CGRect(x:0, y:0, width:411.0, height:260.0)
		var img0007Layer20: UIImage!
		if let imagePath = bundle.pathForResource("_0007_Layer-20.png", ofType:nil) {
			img0007Layer20 = UIImage(contentsOfFile:imagePath)
		}else {
			print("** Warning: Could not create image from '_0007_Layer-20.png'. Please make sure that it is added to the project directly (not in a folder reference).")
		}
		_0007Layer20.image = img0007Layer20
		_0007Layer20.contentMode = .Center
		_0007Layer20.layer.position = CGPoint(x:543.571, y:130.625)
		__scaling__.addSubview(_0007Layer20)
		viewsByName["_0007_Layer-20"] = _0007Layer20

		let _0006Layer21 = UIImageView()
		_0006Layer21.bounds = CGRect(x:0, y:0, width:411.0, height:260.0)
		var img0006Layer21: UIImage!
		if let imagePath = bundle.pathForResource("_0006_Layer-21.png", ofType:nil) {
			img0006Layer21 = UIImage(contentsOfFile:imagePath)
		}else {
			print("** Warning: Could not create image from '_0006_Layer-21.png'. Please make sure that it is added to the project directly (not in a folder reference).")
		}
		_0006Layer21.image = img0006Layer21
		_0006Layer21.contentMode = .Center
		_0006Layer21.layer.position = CGPoint(x:543.571, y:130.625)
		__scaling__.addSubview(_0006Layer21)
		viewsByName["_0006_Layer-21"] = _0006Layer21

		let _0005Layer22 = UIImageView()
		_0005Layer22.bounds = CGRect(x:0, y:0, width:411.0, height:260.0)
		var img0005Layer22: UIImage!
		if let imagePath = bundle.pathForResource("_0005_Layer-22.png", ofType:nil) {
			img0005Layer22 = UIImage(contentsOfFile:imagePath)
		}else {
			print("** Warning: Could not create image from '_0005_Layer-22.png'. Please make sure that it is added to the project directly (not in a folder reference).")
		}
		_0005Layer22.image = img0005Layer22
		_0005Layer22.contentMode = .Center
		_0005Layer22.layer.position = CGPoint(x:543.571, y:130.625)
		__scaling__.addSubview(_0005Layer22)
		viewsByName["_0005_Layer-22"] = _0005Layer22

		let _0004Layer23 = UIImageView()
		_0004Layer23.bounds = CGRect(x:0, y:0, width:411.0, height:260.0)
		var img0004Layer23: UIImage!
		if let imagePath = bundle.pathForResource("_0004_Layer-23.png", ofType:nil) {
			img0004Layer23 = UIImage(contentsOfFile:imagePath)
		}else {
			print("** Warning: Could not create image from '_0004_Layer-23.png'. Please make sure that it is added to the project directly (not in a folder reference).")
		}
		_0004Layer23.image = img0004Layer23
		_0004Layer23.contentMode = .Center
		_0004Layer23.layer.position = CGPoint(x:543.571, y:130.625)
		__scaling__.addSubview(_0004Layer23)
		viewsByName["_0004_Layer-23"] = _0004Layer23

		let _0003Layer24 = UIImageView()
		_0003Layer24.bounds = CGRect(x:0, y:0, width:411.0, height:260.0)
		var img0003Layer24: UIImage!
		if let imagePath = bundle.pathForResource("_0003_Layer-24.png", ofType:nil) {
			img0003Layer24 = UIImage(contentsOfFile:imagePath)
		}else {
			print("** Warning: Could not create image from '_0003_Layer-24.png'. Please make sure that it is added to the project directly (not in a folder reference).")
		}
		_0003Layer24.image = img0003Layer24
		_0003Layer24.contentMode = .Center
		_0003Layer24.layer.position = CGPoint(x:543.571, y:130.625)
		__scaling__.addSubview(_0003Layer24)
		viewsByName["_0003_Layer-24"] = _0003Layer24

		let _0002Layer25 = UIImageView()
		_0002Layer25.bounds = CGRect(x:0, y:0, width:411.0, height:260.0)
		var img0002Layer25: UIImage!
		if let imagePath = bundle.pathForResource("_0002_Layer-25.png", ofType:nil) {
			img0002Layer25 = UIImage(contentsOfFile:imagePath)
		}else {
			print("** Warning: Could not create image from '_0002_Layer-25.png'. Please make sure that it is added to the project directly (not in a folder reference).")
		}
		_0002Layer25.image = img0002Layer25
		_0002Layer25.contentMode = .Center
		_0002Layer25.layer.position = CGPoint(x:543.571, y:130.625)
		__scaling__.addSubview(_0002Layer25)
		viewsByName["_0002_Layer-25"] = _0002Layer25

		let _0001Layer26 = UIImageView()
		_0001Layer26.bounds = CGRect(x:0, y:0, width:411.0, height:260.0)
		var img0001Layer26: UIImage!
		if let imagePath = bundle.pathForResource("_0001_Layer-26.png", ofType:nil) {
			img0001Layer26 = UIImage(contentsOfFile:imagePath)
		}else {
			print("** Warning: Could not create image from '_0001_Layer-26.png'. Please make sure that it is added to the project directly (not in a folder reference).")
		}
		_0001Layer26.image = img0001Layer26
		_0001Layer26.contentMode = .Center
		_0001Layer26.layer.position = CGPoint(x:543.571, y:130.625)
		__scaling__.addSubview(_0001Layer26)
		viewsByName["_0001_Layer-26"] = _0001Layer26

		let _0000Layer27 = UIImageView()
		_0000Layer27.bounds = CGRect(x:0, y:0, width:411.0, height:260.0)
		var img0000Layer27: UIImage!
		if let imagePath = bundle.pathForResource("_0000_Layer-27.png", ofType:nil) {
			img0000Layer27 = UIImage(contentsOfFile:imagePath)
		}else {
			print("** Warning: Could not create image from '_0000_Layer-27.png'. Please make sure that it is added to the project directly (not in a folder reference).")
		}
		_0000Layer27.image = img0000Layer27
		_0000Layer27.contentMode = .Center
		_0000Layer27.layer.position = CGPoint(x:543.571, y:130.625)
		__scaling__.addSubview(_0000Layer27)
		viewsByName["_0000_Layer-27"] = _0000Layer27

		self.viewsByName = viewsByName
	}

	// - MARK: carousel_1_animation

	func addCarousel1Animation() {
		addCarousel1AnimationWithBeginTime(0, fillMode: kCAFillModeBoth, removedOnCompletion: false, completion: nil)
	}

	func addCarousel1Animation(completion: ((Bool) -> Void)?) {
		addCarousel1AnimationWithBeginTime(0, fillMode: kCAFillModeBoth, removedOnCompletion: false, completion: completion)
	}

	func addCarousel1Animation(removedOnCompletion removedOnCompletion: Bool) {
		addCarousel1AnimationWithBeginTime(0, fillMode: removedOnCompletion ? kCAFillModeRemoved : kCAFillModeBoth, removedOnCompletion: removedOnCompletion, completion: nil)
	}

	func addCarousel1Animation(removedOnCompletion removedOnCompletion: Bool, completion: ((Bool) -> Void)?) {
		addCarousel1AnimationWithBeginTime(0, fillMode: removedOnCompletion ? kCAFillModeRemoved : kCAFillModeBoth, removedOnCompletion: removedOnCompletion, completion: completion)
	}

	func addCarousel1AnimationWithBeginTime(beginTime: CFTimeInterval, fillMode: String, removedOnCompletion: Bool, completion: ((Bool) -> Void)?) {
		let linearTiming = CAMediaTimingFunction(name: kCAMediaTimingFunctionLinear)
		if let complete = completion {
			let representativeAnimation = CABasicAnimation(keyPath: "not.a.real.key")
			representativeAnimation.duration = 1.050
			representativeAnimation.delegate = self
			self.layer.addAnimation(representativeAnimation, forKey: "Carousel1Animation")
			self.animationCompletions[layer.animationForKey("Carousel1Animation")!] = complete
		}

		let _0002Layer25OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		_0002Layer25OpacityAnimation.duration = 1.050
		_0002Layer25OpacityAnimation.values = [0.000 as Float, 0.000 as Float, 1.000 as Float, 1.000 as Float, 0.000 as Float, 0.000 as Float]
		_0002Layer25OpacityAnimation.keyTimes = [0.000 as Float, 0.905 as Float, 0.914 as Float, 0.952 as Float, 0.962 as Float, 1.000 as Float]
		_0002Layer25OpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming, linearTiming]
		_0002Layer25OpacityAnimation.beginTime = beginTime
		_0002Layer25OpacityAnimation.fillMode = fillMode
		_0002Layer25OpacityAnimation.removedOnCompletion = removedOnCompletion
		self.viewsByName["_0002_Layer-25"]?.layer.addAnimation(_0002Layer25OpacityAnimation, forKey:"carousel_1_animation_Opacity")

		let _0008Layer19OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		_0008Layer19OpacityAnimation.duration = 1.050
		_0008Layer19OpacityAnimation.values = [0.000 as Float, 0.000 as Float, 1.000 as Float, 1.000 as Float, 0.000 as Float, 0.000 as Float]
		_0008Layer19OpacityAnimation.keyTimes = [0.000 as Float, 0.676 as Float, 0.686 as Float, 0.724 as Float, 0.733 as Float, 1.000 as Float]
		_0008Layer19OpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming, linearTiming]
		_0008Layer19OpacityAnimation.beginTime = beginTime
		_0008Layer19OpacityAnimation.fillMode = fillMode
		_0008Layer19OpacityAnimation.removedOnCompletion = removedOnCompletion
		self.viewsByName["_0008_Layer-19"]?.layer.addAnimation(_0008Layer19OpacityAnimation, forKey:"carousel_1_animation_Opacity")

		let _0015Layer12OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		_0015Layer12OpacityAnimation.duration = 1.050
		_0015Layer12OpacityAnimation.values = [0.000 as Float, 0.000 as Float, 1.000 as Float, 1.000 as Float, 0.000 as Float, 0.000 as Float]
		_0015Layer12OpacityAnimation.keyTimes = [0.000 as Float, 0.410 as Float, 0.419 as Float, 0.457 as Float, 0.467 as Float, 1.000 as Float]
		_0015Layer12OpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming, linearTiming]
		_0015Layer12OpacityAnimation.beginTime = beginTime
		_0015Layer12OpacityAnimation.fillMode = fillMode
		_0015Layer12OpacityAnimation.removedOnCompletion = removedOnCompletion
		self.viewsByName["_0015_Layer-12"]?.layer.addAnimation(_0015Layer12OpacityAnimation, forKey:"carousel_1_animation_Opacity")

		let _0007Layer20OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		_0007Layer20OpacityAnimation.duration = 1.050
		_0007Layer20OpacityAnimation.values = [0.000 as Float, 0.000 as Float, 1.000 as Float, 1.000 as Float, 0.000 as Float, 0.000 as Float]
		_0007Layer20OpacityAnimation.keyTimes = [0.000 as Float, 0.714 as Float, 0.724 as Float, 0.762 as Float, 0.771 as Float, 1.000 as Float]
		_0007Layer20OpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming, linearTiming]
		_0007Layer20OpacityAnimation.beginTime = beginTime
		_0007Layer20OpacityAnimation.fillMode = fillMode
		_0007Layer20OpacityAnimation.removedOnCompletion = removedOnCompletion
		self.viewsByName["_0007_Layer-20"]?.layer.addAnimation(_0007Layer20OpacityAnimation, forKey:"carousel_1_animation_Opacity")

		let _0005Layer22OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		_0005Layer22OpacityAnimation.duration = 1.050
		_0005Layer22OpacityAnimation.values = [0.000 as Float, 0.000 as Float, 1.000 as Float, 1.000 as Float, 0.000 as Float, 0.000 as Float]
		_0005Layer22OpacityAnimation.keyTimes = [0.000 as Float, 0.790 as Float, 0.800 as Float, 0.838 as Float, 0.848 as Float, 1.000 as Float]
		_0005Layer22OpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming, linearTiming]
		_0005Layer22OpacityAnimation.beginTime = beginTime
		_0005Layer22OpacityAnimation.fillMode = fillMode
		_0005Layer22OpacityAnimation.removedOnCompletion = removedOnCompletion
		self.viewsByName["_0005_Layer-22"]?.layer.addAnimation(_0005Layer22OpacityAnimation, forKey:"carousel_1_animation_Opacity")

		let _0013Layer14OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		_0013Layer14OpacityAnimation.duration = 1.050
		_0013Layer14OpacityAnimation.values = [0.000 as Float, 0.000 as Float, 1.000 as Float, 1.000 as Float, 0.000 as Float, 0.000 as Float]
		_0013Layer14OpacityAnimation.keyTimes = [0.000 as Float, 0.486 as Float, 0.495 as Float, 0.533 as Float, 0.543 as Float, 1.000 as Float]
		_0013Layer14OpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming, linearTiming]
		_0013Layer14OpacityAnimation.beginTime = beginTime
		_0013Layer14OpacityAnimation.fillMode = fillMode
		_0013Layer14OpacityAnimation.removedOnCompletion = removedOnCompletion
		self.viewsByName["_0013_Layer-14"]?.layer.addAnimation(_0013Layer14OpacityAnimation, forKey:"carousel_1_animation_Opacity")

		let _0006Layer21OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		_0006Layer21OpacityAnimation.duration = 1.050
		_0006Layer21OpacityAnimation.values = [0.000 as Float, 0.000 as Float, 1.000 as Float, 1.000 as Float, 0.000 as Float, 0.000 as Float]
		_0006Layer21OpacityAnimation.keyTimes = [0.000 as Float, 0.752 as Float, 0.762 as Float, 0.800 as Float, 0.810 as Float, 1.000 as Float]
		_0006Layer21OpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming, linearTiming]
		_0006Layer21OpacityAnimation.beginTime = beginTime
		_0006Layer21OpacityAnimation.fillMode = fillMode
		_0006Layer21OpacityAnimation.removedOnCompletion = removedOnCompletion
		self.viewsByName["_0006_Layer-21"]?.layer.addAnimation(_0006Layer21OpacityAnimation, forKey:"carousel_1_animation_Opacity")

		let _0009Layer18OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		_0009Layer18OpacityAnimation.duration = 1.050
		_0009Layer18OpacityAnimation.values = [0.000 as Float, 0.000 as Float, 1.000 as Float, 1.000 as Float, 0.000 as Float, 0.000 as Float]
		_0009Layer18OpacityAnimation.keyTimes = [0.000 as Float, 0.638 as Float, 0.648 as Float, 0.686 as Float, 0.695 as Float, 1.000 as Float]
		_0009Layer18OpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming, linearTiming]
		_0009Layer18OpacityAnimation.beginTime = beginTime
		_0009Layer18OpacityAnimation.fillMode = fillMode
		_0009Layer18OpacityAnimation.removedOnCompletion = removedOnCompletion
		self.viewsByName["_0009_Layer-18"]?.layer.addAnimation(_0009Layer18OpacityAnimation, forKey:"carousel_1_animation_Opacity")

		let _0019Layer8OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		_0019Layer8OpacityAnimation.duration = 1.050
		_0019Layer8OpacityAnimation.values = [0.000 as Float, 0.000 as Float, 1.000 as Float, 1.000 as Float, 0.000 as Float, 0.000 as Float]
		_0019Layer8OpacityAnimation.keyTimes = [0.000 as Float, 0.257 as Float, 0.267 as Float, 0.305 as Float, 0.314 as Float, 1.000 as Float]
		_0019Layer8OpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming, linearTiming]
		_0019Layer8OpacityAnimation.beginTime = beginTime
		_0019Layer8OpacityAnimation.fillMode = fillMode
		_0019Layer8OpacityAnimation.removedOnCompletion = removedOnCompletion
		self.viewsByName["_0019_Layer-8"]?.layer.addAnimation(_0019Layer8OpacityAnimation, forKey:"carousel_1_animation_Opacity")

		let _0017Layer10OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		_0017Layer10OpacityAnimation.duration = 1.050
		_0017Layer10OpacityAnimation.values = [0.000 as Float, 0.000 as Float, 1.000 as Float, 1.000 as Float, 0.000 as Float, 0.000 as Float]
		_0017Layer10OpacityAnimation.keyTimes = [0.000 as Float, 0.333 as Float, 0.343 as Float, 0.381 as Float, 0.390 as Float, 1.000 as Float]
		_0017Layer10OpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming, linearTiming]
		_0017Layer10OpacityAnimation.beginTime = beginTime
		_0017Layer10OpacityAnimation.fillMode = fillMode
		_0017Layer10OpacityAnimation.removedOnCompletion = removedOnCompletion
		self.viewsByName["_0017_Layer-10"]?.layer.addAnimation(_0017Layer10OpacityAnimation, forKey:"carousel_1_animation_Opacity")

		let _0010Layer17OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		_0010Layer17OpacityAnimation.duration = 1.050
		_0010Layer17OpacityAnimation.values = [0.000 as Float, 0.000 as Float, 1.000 as Float, 1.000 as Float, 0.000 as Float, 0.000 as Float]
		_0010Layer17OpacityAnimation.keyTimes = [0.000 as Float, 0.600 as Float, 0.610 as Float, 0.648 as Float, 0.657 as Float, 1.000 as Float]
		_0010Layer17OpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming, linearTiming]
		_0010Layer17OpacityAnimation.beginTime = beginTime
		_0010Layer17OpacityAnimation.fillMode = fillMode
		_0010Layer17OpacityAnimation.removedOnCompletion = removedOnCompletion
		self.viewsByName["_0010_Layer-17"]?.layer.addAnimation(_0010Layer17OpacityAnimation, forKey:"carousel_1_animation_Opacity")

		let _0001Layer26OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		_0001Layer26OpacityAnimation.duration = 1.050
		_0001Layer26OpacityAnimation.values = [0.000 as Float, 0.000 as Float, 1.000 as Float, 1.000 as Float, 0.000 as Float]
		_0001Layer26OpacityAnimation.keyTimes = [0.000 as Float, 0.943 as Float, 0.952 as Float, 0.990 as Float, 1.000 as Float]
		_0001Layer26OpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming]
		_0001Layer26OpacityAnimation.beginTime = beginTime
		_0001Layer26OpacityAnimation.fillMode = fillMode
		_0001Layer26OpacityAnimation.removedOnCompletion = removedOnCompletion
		self.viewsByName["_0001_Layer-26"]?.layer.addAnimation(_0001Layer26OpacityAnimation, forKey:"carousel_1_animation_Opacity")

		let _0011Layer16OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		_0011Layer16OpacityAnimation.duration = 1.050
		_0011Layer16OpacityAnimation.values = [0.000 as Float, 0.000 as Float, 1.000 as Float, 1.000 as Float, 0.000 as Float, 0.000 as Float]
		_0011Layer16OpacityAnimation.keyTimes = [0.000 as Float, 0.562 as Float, 0.571 as Float, 0.610 as Float, 0.619 as Float, 1.000 as Float]
		_0011Layer16OpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming, linearTiming]
		_0011Layer16OpacityAnimation.beginTime = beginTime
		_0011Layer16OpacityAnimation.fillMode = fillMode
		_0011Layer16OpacityAnimation.removedOnCompletion = removedOnCompletion
		self.viewsByName["_0011_Layer-16"]?.layer.addAnimation(_0011Layer16OpacityAnimation, forKey:"carousel_1_animation_Opacity")

		let _0018Layer9OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		_0018Layer9OpacityAnimation.duration = 1.050
		_0018Layer9OpacityAnimation.values = [0.000 as Float, 0.000 as Float, 1.000 as Float, 1.000 as Float, 0.000 as Float, 0.000 as Float]
		_0018Layer9OpacityAnimation.keyTimes = [0.000 as Float, 0.295 as Float, 0.305 as Float, 0.343 as Float, 0.352 as Float, 1.000 as Float]
		_0018Layer9OpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming, linearTiming]
		_0018Layer9OpacityAnimation.beginTime = beginTime
		_0018Layer9OpacityAnimation.fillMode = fillMode
		_0018Layer9OpacityAnimation.removedOnCompletion = removedOnCompletion
		self.viewsByName["_0018_Layer-9"]?.layer.addAnimation(_0018Layer9OpacityAnimation, forKey:"carousel_1_animation_Opacity")

		let _0023Layer4OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		_0023Layer4OpacityAnimation.duration = 1.050
		_0023Layer4OpacityAnimation.values = [0.000 as Float, 0.000 as Float, 1.000 as Float, 1.000 as Float, 0.000 as Float, 0.000 as Float]
		_0023Layer4OpacityAnimation.keyTimes = [0.000 as Float, 0.105 as Float, 0.114 as Float, 0.152 as Float, 0.162 as Float, 1.000 as Float]
		_0023Layer4OpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming, linearTiming]
		_0023Layer4OpacityAnimation.beginTime = beginTime
		_0023Layer4OpacityAnimation.fillMode = fillMode
		_0023Layer4OpacityAnimation.removedOnCompletion = removedOnCompletion
		self.viewsByName["_0023_Layer-4"]?.layer.addAnimation(_0023Layer4OpacityAnimation, forKey:"carousel_1_animation_Opacity")

		let _0016Layer11OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		_0016Layer11OpacityAnimation.duration = 1.050
		_0016Layer11OpacityAnimation.values = [0.000 as Float, 0.000 as Float, 1.000 as Float, 1.000 as Float, 0.000 as Float, 0.000 as Float]
		_0016Layer11OpacityAnimation.keyTimes = [0.000 as Float, 0.371 as Float, 0.381 as Float, 0.419 as Float, 0.429 as Float, 1.000 as Float]
		_0016Layer11OpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming, linearTiming]
		_0016Layer11OpacityAnimation.beginTime = beginTime
		_0016Layer11OpacityAnimation.fillMode = fillMode
		_0016Layer11OpacityAnimation.removedOnCompletion = removedOnCompletion
		self.viewsByName["_0016_Layer-11"]?.layer.addAnimation(_0016Layer11OpacityAnimation, forKey:"carousel_1_animation_Opacity")

		let _0020Layer7OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		_0020Layer7OpacityAnimation.duration = 1.050
		_0020Layer7OpacityAnimation.values = [0.000 as Float, 0.000 as Float, 1.000 as Float, 1.000 as Float, 0.000 as Float, 0.000 as Float]
		_0020Layer7OpacityAnimation.keyTimes = [0.000 as Float, 0.219 as Float, 0.229 as Float, 0.267 as Float, 0.276 as Float, 1.000 as Float]
		_0020Layer7OpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming, linearTiming]
		_0020Layer7OpacityAnimation.beginTime = beginTime
		_0020Layer7OpacityAnimation.fillMode = fillMode
		_0020Layer7OpacityAnimation.removedOnCompletion = removedOnCompletion
		self.viewsByName["_0020_Layer-7"]?.layer.addAnimation(_0020Layer7OpacityAnimation, forKey:"carousel_1_animation_Opacity")

		let _0021Layer6OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		_0021Layer6OpacityAnimation.duration = 1.050
		_0021Layer6OpacityAnimation.values = [0.000 as Float, 0.000 as Float, 1.000 as Float, 1.000 as Float, 0.000 as Float, 0.000 as Float]
		_0021Layer6OpacityAnimation.keyTimes = [0.000 as Float, 0.181 as Float, 0.190 as Float, 0.229 as Float, 0.238 as Float, 1.000 as Float]
		_0021Layer6OpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming, linearTiming]
		_0021Layer6OpacityAnimation.beginTime = beginTime
		_0021Layer6OpacityAnimation.fillMode = fillMode
		_0021Layer6OpacityAnimation.removedOnCompletion = removedOnCompletion
		self.viewsByName["_0021_Layer-6"]?.layer.addAnimation(_0021Layer6OpacityAnimation, forKey:"carousel_1_animation_Opacity")

		let _0014Layer13OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		_0014Layer13OpacityAnimation.duration = 1.050
		_0014Layer13OpacityAnimation.values = [0.000 as Float, 0.000 as Float, 1.000 as Float, 1.000 as Float, 0.000 as Float, 0.000 as Float]
		_0014Layer13OpacityAnimation.keyTimes = [0.000 as Float, 0.448 as Float, 0.457 as Float, 0.495 as Float, 0.505 as Float, 1.000 as Float]
		_0014Layer13OpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming, linearTiming]
		_0014Layer13OpacityAnimation.beginTime = beginTime
		_0014Layer13OpacityAnimation.fillMode = fillMode
		_0014Layer13OpacityAnimation.removedOnCompletion = removedOnCompletion
		self.viewsByName["_0014_Layer-13"]?.layer.addAnimation(_0014Layer13OpacityAnimation, forKey:"carousel_1_animation_Opacity")

		let _0012Layer15OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		_0012Layer15OpacityAnimation.duration = 1.050
		_0012Layer15OpacityAnimation.values = [0.000 as Float, 0.000 as Float, 1.000 as Float, 1.000 as Float, 0.000 as Float, 0.000 as Float]
		_0012Layer15OpacityAnimation.keyTimes = [0.000 as Float, 0.524 as Float, 0.533 as Float, 0.571 as Float, 0.581 as Float, 1.000 as Float]
		_0012Layer15OpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming, linearTiming]
		_0012Layer15OpacityAnimation.beginTime = beginTime
		_0012Layer15OpacityAnimation.fillMode = fillMode
		_0012Layer15OpacityAnimation.removedOnCompletion = removedOnCompletion
		self.viewsByName["_0012_Layer-15"]?.layer.addAnimation(_0012Layer15OpacityAnimation, forKey:"carousel_1_animation_Opacity")

		let _0025Layer2OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		_0025Layer2OpacityAnimation.duration = 1.050
		_0025Layer2OpacityAnimation.values = [0.000 as Float, 0.000 as Float, 1.000 as Float, 1.000 as Float, 0.000 as Float, 0.000 as Float]
		_0025Layer2OpacityAnimation.keyTimes = [0.000 as Float, 0.029 as Float, 0.038 as Float, 0.076 as Float, 0.086 as Float, 1.000 as Float]
		_0025Layer2OpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming, linearTiming]
		_0025Layer2OpacityAnimation.beginTime = beginTime
		_0025Layer2OpacityAnimation.fillMode = fillMode
		_0025Layer2OpacityAnimation.removedOnCompletion = removedOnCompletion
		self.viewsByName["_0025_Layer-2"]?.layer.addAnimation(_0025Layer2OpacityAnimation, forKey:"carousel_1_animation_Opacity")

		let _0004Layer23OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		_0004Layer23OpacityAnimation.duration = 1.050
		_0004Layer23OpacityAnimation.values = [0.000 as Float, 0.000 as Float, 1.000 as Float, 1.000 as Float, 0.000 as Float, 0.000 as Float]
		_0004Layer23OpacityAnimation.keyTimes = [0.000 as Float, 0.829 as Float, 0.838 as Float, 0.876 as Float, 0.886 as Float, 1.000 as Float]
		_0004Layer23OpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming, linearTiming]
		_0004Layer23OpacityAnimation.beginTime = beginTime
		_0004Layer23OpacityAnimation.fillMode = fillMode
		_0004Layer23OpacityAnimation.removedOnCompletion = removedOnCompletion
		self.viewsByName["_0004_Layer-23"]?.layer.addAnimation(_0004Layer23OpacityAnimation, forKey:"carousel_1_animation_Opacity")

		let _0003Layer24OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		_0003Layer24OpacityAnimation.duration = 1.050
		_0003Layer24OpacityAnimation.values = [0.000 as Float, 0.000 as Float, 1.000 as Float, 1.000 as Float, 0.000 as Float, 0.000 as Float]
		_0003Layer24OpacityAnimation.keyTimes = [0.000 as Float, 0.867 as Float, 0.876 as Float, 0.914 as Float, 0.924 as Float, 1.000 as Float]
		_0003Layer24OpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming, linearTiming]
		_0003Layer24OpacityAnimation.beginTime = beginTime
		_0003Layer24OpacityAnimation.fillMode = fillMode
		_0003Layer24OpacityAnimation.removedOnCompletion = removedOnCompletion
		self.viewsByName["_0003_Layer-24"]?.layer.addAnimation(_0003Layer24OpacityAnimation, forKey:"carousel_1_animation_Opacity")

		let _0000Layer27OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		_0000Layer27OpacityAnimation.duration = 1.050
		_0000Layer27OpacityAnimation.values = [0.000 as Float, 0.000 as Float, 1.000 as Float, 1.000 as Float]
		_0000Layer27OpacityAnimation.keyTimes = [0.000 as Float, 0.981 as Float, 0.990 as Float, 1.000 as Float]
		_0000Layer27OpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		_0000Layer27OpacityAnimation.beginTime = beginTime
		_0000Layer27OpacityAnimation.fillMode = fillMode
		_0000Layer27OpacityAnimation.removedOnCompletion = removedOnCompletion
		self.viewsByName["_0000_Layer-27"]?.layer.addAnimation(_0000Layer27OpacityAnimation, forKey:"carousel_1_animation_Opacity")

		let _0024Layer3OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		_0024Layer3OpacityAnimation.duration = 1.050
		_0024Layer3OpacityAnimation.values = [0.000 as Float, 0.000 as Float, 1.000 as Float, 1.000 as Float, 0.000 as Float, 0.000 as Float]
		_0024Layer3OpacityAnimation.keyTimes = [0.000 as Float, 0.067 as Float, 0.076 as Float, 0.114 as Float, 0.124 as Float, 1.000 as Float]
		_0024Layer3OpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming, linearTiming]
		_0024Layer3OpacityAnimation.beginTime = beginTime
		_0024Layer3OpacityAnimation.fillMode = fillMode
		_0024Layer3OpacityAnimation.removedOnCompletion = removedOnCompletion
		self.viewsByName["_0024_Layer-3"]?.layer.addAnimation(_0024Layer3OpacityAnimation, forKey:"carousel_1_animation_Opacity")

		let _0022Layer5OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		_0022Layer5OpacityAnimation.duration = 1.050
		_0022Layer5OpacityAnimation.values = [0.000 as Float, 0.000 as Float, 1.000 as Float, 1.000 as Float, 0.000 as Float, 0.000 as Float]
		_0022Layer5OpacityAnimation.keyTimes = [0.000 as Float, 0.143 as Float, 0.152 as Float, 0.190 as Float, 0.200 as Float, 1.000 as Float]
		_0022Layer5OpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming, linearTiming]
		_0022Layer5OpacityAnimation.beginTime = beginTime
		_0022Layer5OpacityAnimation.fillMode = fillMode
		_0022Layer5OpacityAnimation.removedOnCompletion = removedOnCompletion
		self.viewsByName["_0022_Layer-5"]?.layer.addAnimation(_0022Layer5OpacityAnimation, forKey:"carousel_1_animation_Opacity")

		let _0026Layer1OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		_0026Layer1OpacityAnimation.duration = 1.050
		_0026Layer1OpacityAnimation.values = [1.000 as Float, 1.000 as Float, 0.000 as Float, 0.000 as Float]
		_0026Layer1OpacityAnimation.keyTimes = [0.000 as Float, 0.038 as Float, 0.048 as Float, 1.000 as Float]
		_0026Layer1OpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		_0026Layer1OpacityAnimation.beginTime = beginTime
		_0026Layer1OpacityAnimation.fillMode = fillMode
		_0026Layer1OpacityAnimation.removedOnCompletion = removedOnCompletion
		self.viewsByName["_0026_Layer-1"]?.layer.addAnimation(_0026Layer1OpacityAnimation, forKey:"carousel_1_animation_Opacity")
	}

	func removeCarousel1Animation() {
		self.layer.removeAnimationForKey("Carousel1Animation")
		self.viewsByName["_0002_Layer-25"]?.layer.removeAnimationForKey("carousel_1_animation_Opacity")
		self.viewsByName["_0008_Layer-19"]?.layer.removeAnimationForKey("carousel_1_animation_Opacity")
		self.viewsByName["_0015_Layer-12"]?.layer.removeAnimationForKey("carousel_1_animation_Opacity")
		self.viewsByName["_0007_Layer-20"]?.layer.removeAnimationForKey("carousel_1_animation_Opacity")
		self.viewsByName["_0005_Layer-22"]?.layer.removeAnimationForKey("carousel_1_animation_Opacity")
		self.viewsByName["_0013_Layer-14"]?.layer.removeAnimationForKey("carousel_1_animation_Opacity")
		self.viewsByName["_0006_Layer-21"]?.layer.removeAnimationForKey("carousel_1_animation_Opacity")
		self.viewsByName["_0009_Layer-18"]?.layer.removeAnimationForKey("carousel_1_animation_Opacity")
		self.viewsByName["_0019_Layer-8"]?.layer.removeAnimationForKey("carousel_1_animation_Opacity")
		self.viewsByName["_0017_Layer-10"]?.layer.removeAnimationForKey("carousel_1_animation_Opacity")
		self.viewsByName["_0010_Layer-17"]?.layer.removeAnimationForKey("carousel_1_animation_Opacity")
		self.viewsByName["_0001_Layer-26"]?.layer.removeAnimationForKey("carousel_1_animation_Opacity")
		self.viewsByName["_0011_Layer-16"]?.layer.removeAnimationForKey("carousel_1_animation_Opacity")
		self.viewsByName["_0018_Layer-9"]?.layer.removeAnimationForKey("carousel_1_animation_Opacity")
		self.viewsByName["_0023_Layer-4"]?.layer.removeAnimationForKey("carousel_1_animation_Opacity")
		self.viewsByName["_0016_Layer-11"]?.layer.removeAnimationForKey("carousel_1_animation_Opacity")
		self.viewsByName["_0020_Layer-7"]?.layer.removeAnimationForKey("carousel_1_animation_Opacity")
		self.viewsByName["_0021_Layer-6"]?.layer.removeAnimationForKey("carousel_1_animation_Opacity")
		self.viewsByName["_0014_Layer-13"]?.layer.removeAnimationForKey("carousel_1_animation_Opacity")
		self.viewsByName["_0012_Layer-15"]?.layer.removeAnimationForKey("carousel_1_animation_Opacity")
		self.viewsByName["_0025_Layer-2"]?.layer.removeAnimationForKey("carousel_1_animation_Opacity")
		self.viewsByName["_0004_Layer-23"]?.layer.removeAnimationForKey("carousel_1_animation_Opacity")
		self.viewsByName["_0003_Layer-24"]?.layer.removeAnimationForKey("carousel_1_animation_Opacity")
		self.viewsByName["_0000_Layer-27"]?.layer.removeAnimationForKey("carousel_1_animation_Opacity")
		self.viewsByName["_0024_Layer-3"]?.layer.removeAnimationForKey("carousel_1_animation_Opacity")
		self.viewsByName["_0022_Layer-5"]?.layer.removeAnimationForKey("carousel_1_animation_Opacity")
		self.viewsByName["_0026_Layer-1"]?.layer.removeAnimationForKey("carousel_1_animation_Opacity")
	}

	override func animationDidStop(anim: CAAnimation, finished flag: Bool) {
		if let completion = self.animationCompletions[anim] {
			self.animationCompletions.removeValueForKey(anim)
			completion(flag)
		}
	}

	func removeAllAnimations() {
		for subview in viewsByName.values {
			subview.layer.removeAllAnimations()
		}
		self.layer.removeAnimationForKey("Carousel1Animation")
	}
}