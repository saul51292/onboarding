//
// Carousel2ForwardView.swift
// Generated by Core Animator version 1.3.1 on 8/23/16.
//
// DO NOT MODIFY THIS FILE. IT IS AUTO-GENERATED AND WILL BE OVERWRITTEN
//

import UIKit

@IBDesignable
class Carousel2ForwardView : UIView {


	var animationCompletions = Dictionary<CAAnimation, (Bool) -> Void>()
	var viewsByName: [String : UIView]!

	// - MARK: Life Cycle

	convenience init() {
		self.init(frame: CGRect(x: 0, y: 0, width: 750, height: 230))
	}

	override init(frame: CGRect) {
		super.init(frame: frame)
		self.setupHierarchy()
	}

	required init?(coder aDecoder: NSCoder) {
		super.init(coder: aDecoder)
		self.setupHierarchy()
	}

	// - MARK: Scaling

	override func layoutSubviews() {
		super.layoutSubviews()

		if let scalingView = self.viewsByName["__scaling__"] {
			var xScale = self.bounds.size.width / scalingView.bounds.size.width
			var yScale = self.bounds.size.height / scalingView.bounds.size.height
			switch contentMode {
			case .ScaleToFill:
				break
			case .ScaleAspectFill:
				let scale = max(xScale, yScale)
				xScale = scale
				yScale = scale
			default:
				let scale = min(xScale, yScale)
				xScale = scale
				yScale = scale
			}
			scalingView.transform = CGAffineTransformMakeScale(xScale, yScale)
			scalingView.center = CGPoint(x:CGRectGetMidX(self.bounds), y:CGRectGetMidY(self.bounds))
		}
	}

	// - MARK: Setup

	func setupHierarchy() {
		var viewsByName: [String : UIView] = [:]
		let bundle = NSBundle(forClass:self.dynamicType)
		let __scaling__ = UIView()
		__scaling__.bounds = CGRect(x:0, y:0, width:750, height:230)
		__scaling__.center = CGPoint(x:375.0, y:115.0)
		self.addSubview(__scaling__)
		viewsByName["__scaling__"] = __scaling__

		let layer1 = UIImageView()
		layer1.bounds = CGRect(x:0, y:0, width:750.0, height:230.0)
		var imgLayer1: UIImage!
		if let imagePath = bundle.pathForResource("Layer-1.png", ofType:nil) {
			imgLayer1 = UIImage(contentsOfFile:imagePath)
		}else {
			print("** Warning: Could not create image from 'Layer-1.png'. Please make sure that it is added to the project directly (not in a folder reference).")
		}
		layer1.image = imgLayer1
		layer1.contentMode = .Center
		layer1.layer.position = CGPoint(x:375.143, y:115.227)
		__scaling__.addSubview(layer1)
		viewsByName["Layer-1"] = layer1

		let layer2 = UIImageView()
		layer2.bounds = CGRect(x:0, y:0, width:750.0, height:230.0)
		var imgLayer2: UIImage!
		if let imagePath = bundle.pathForResource("Layer-2.png", ofType:nil) {
			imgLayer2 = UIImage(contentsOfFile:imagePath)
		}else {
			print("** Warning: Could not create image from 'Layer-2.png'. Please make sure that it is added to the project directly (not in a folder reference).")
		}
		layer2.image = imgLayer2
		layer2.contentMode = .Center
		layer2.layer.position = CGPoint(x:375.143, y:115.227)
		__scaling__.addSubview(layer2)
		viewsByName["Layer-2"] = layer2

		let layer3 = UIImageView()
		layer3.bounds = CGRect(x:0, y:0, width:750.0, height:230.0)
		var imgLayer3: UIImage!
		if let imagePath = bundle.pathForResource("Layer-3.png", ofType:nil) {
			imgLayer3 = UIImage(contentsOfFile:imagePath)
		}else {
			print("** Warning: Could not create image from 'Layer-3.png'. Please make sure that it is added to the project directly (not in a folder reference).")
		}
		layer3.image = imgLayer3
		layer3.contentMode = .Center
		layer3.layer.position = CGPoint(x:375.143, y:115.227)
		__scaling__.addSubview(layer3)
		viewsByName["Layer-3"] = layer3

		let layer4 = UIImageView()
		layer4.bounds = CGRect(x:0, y:0, width:750.0, height:230.0)
		var imgLayer4: UIImage!
		if let imagePath = bundle.pathForResource("Layer-4.png", ofType:nil) {
			imgLayer4 = UIImage(contentsOfFile:imagePath)
		}else {
			print("** Warning: Could not create image from 'Layer-4.png'. Please make sure that it is added to the project directly (not in a folder reference).")
		}
		layer4.image = imgLayer4
		layer4.contentMode = .Center
		layer4.layer.position = CGPoint(x:375.143, y:115.227)
		__scaling__.addSubview(layer4)
		viewsByName["Layer-4"] = layer4

		let layer5 = UIImageView()
		layer5.bounds = CGRect(x:0, y:0, width:750.0, height:230.0)
		var imgLayer5: UIImage!
		if let imagePath = bundle.pathForResource("Layer-5.png", ofType:nil) {
			imgLayer5 = UIImage(contentsOfFile:imagePath)
		}else {
			print("** Warning: Could not create image from 'Layer-5.png'. Please make sure that it is added to the project directly (not in a folder reference).")
		}
		layer5.image = imgLayer5
		layer5.contentMode = .Center
		layer5.layer.position = CGPoint(x:375.143, y:115.227)
		__scaling__.addSubview(layer5)
		viewsByName["Layer-5"] = layer5

		let layer6 = UIImageView()
		layer6.bounds = CGRect(x:0, y:0, width:750.0, height:230.0)
		var imgLayer6: UIImage!
		if let imagePath = bundle.pathForResource("Layer-6.png", ofType:nil) {
			imgLayer6 = UIImage(contentsOfFile:imagePath)
		}else {
			print("** Warning: Could not create image from 'Layer-6.png'. Please make sure that it is added to the project directly (not in a folder reference).")
		}
		layer6.image = imgLayer6
		layer6.contentMode = .Center
		layer6.layer.position = CGPoint(x:375.143, y:115.227)
		__scaling__.addSubview(layer6)
		viewsByName["Layer-6"] = layer6

		let layer7 = UIImageView()
		layer7.bounds = CGRect(x:0, y:0, width:750.0, height:230.0)
		var imgLayer7: UIImage!
		if let imagePath = bundle.pathForResource("Layer-7.png", ofType:nil) {
			imgLayer7 = UIImage(contentsOfFile:imagePath)
		}else {
			print("** Warning: Could not create image from 'Layer-7.png'. Please make sure that it is added to the project directly (not in a folder reference).")
		}
		layer7.image = imgLayer7
		layer7.contentMode = .Center
		layer7.layer.position = CGPoint(x:375.143, y:115.227)
		__scaling__.addSubview(layer7)
		viewsByName["Layer-7"] = layer7

		let layer8 = UIImageView()
		layer8.bounds = CGRect(x:0, y:0, width:750.0, height:230.0)
		var imgLayer8: UIImage!
		if let imagePath = bundle.pathForResource("Layer-8.png", ofType:nil) {
			imgLayer8 = UIImage(contentsOfFile:imagePath)
		}else {
			print("** Warning: Could not create image from 'Layer-8.png'. Please make sure that it is added to the project directly (not in a folder reference).")
		}
		layer8.image = imgLayer8
		layer8.contentMode = .Center
		layer8.layer.position = CGPoint(x:375.143, y:115.227)
		__scaling__.addSubview(layer8)
		viewsByName["Layer-8"] = layer8

		let layer9 = UIImageView()
		layer9.bounds = CGRect(x:0, y:0, width:750.0, height:230.0)
		var imgLayer9: UIImage!
		if let imagePath = bundle.pathForResource("Layer-9.png", ofType:nil) {
			imgLayer9 = UIImage(contentsOfFile:imagePath)
		}else {
			print("** Warning: Could not create image from 'Layer-9.png'. Please make sure that it is added to the project directly (not in a folder reference).")
		}
		layer9.image = imgLayer9
		layer9.contentMode = .Center
		layer9.layer.position = CGPoint(x:375.143, y:115.227)
		__scaling__.addSubview(layer9)
		viewsByName["Layer-9"] = layer9

		let layer10 = UIImageView()
		layer10.bounds = CGRect(x:0, y:0, width:750.0, height:230.0)
		var imgLayer10: UIImage!
		if let imagePath = bundle.pathForResource("Layer-10.png", ofType:nil) {
			imgLayer10 = UIImage(contentsOfFile:imagePath)
		}else {
			print("** Warning: Could not create image from 'Layer-10.png'. Please make sure that it is added to the project directly (not in a folder reference).")
		}
		layer10.image = imgLayer10
		layer10.contentMode = .Center
		layer10.layer.position = CGPoint(x:375.143, y:115.227)
		__scaling__.addSubview(layer10)
		viewsByName["Layer-10"] = layer10

		let layer11 = UIImageView()
		layer11.bounds = CGRect(x:0, y:0, width:750.0, height:230.0)
		var imgLayer11: UIImage!
		if let imagePath = bundle.pathForResource("Layer-11.png", ofType:nil) {
			imgLayer11 = UIImage(contentsOfFile:imagePath)
		}else {
			print("** Warning: Could not create image from 'Layer-11.png'. Please make sure that it is added to the project directly (not in a folder reference).")
		}
		layer11.image = imgLayer11
		layer11.contentMode = .Center
		layer11.layer.position = CGPoint(x:375.143, y:115.227)
		__scaling__.addSubview(layer11)
		viewsByName["Layer-11"] = layer11

		let layer12 = UIImageView()
		layer12.bounds = CGRect(x:0, y:0, width:750.0, height:230.0)
		var imgLayer12: UIImage!
		if let imagePath = bundle.pathForResource("Layer-12.png", ofType:nil) {
			imgLayer12 = UIImage(contentsOfFile:imagePath)
		}else {
			print("** Warning: Could not create image from 'Layer-12.png'. Please make sure that it is added to the project directly (not in a folder reference).")
		}
		layer12.image = imgLayer12
		layer12.contentMode = .Center
		layer12.layer.position = CGPoint(x:375.143, y:115.227)
		__scaling__.addSubview(layer12)
		viewsByName["Layer-12"] = layer12

		let layer13 = UIImageView()
		layer13.bounds = CGRect(x:0, y:0, width:750.0, height:230.0)
		var imgLayer13: UIImage!
		if let imagePath = bundle.pathForResource("Layer-13.png", ofType:nil) {
			imgLayer13 = UIImage(contentsOfFile:imagePath)
		}else {
			print("** Warning: Could not create image from 'Layer-13.png'. Please make sure that it is added to the project directly (not in a folder reference).")
		}
		layer13.image = imgLayer13
		layer13.contentMode = .Center
		layer13.layer.position = CGPoint(x:375.143, y:115.227)
		__scaling__.addSubview(layer13)
		viewsByName["Layer-13"] = layer13

		let layer14 = UIImageView()
		layer14.bounds = CGRect(x:0, y:0, width:750.0, height:230.0)
		var imgLayer14: UIImage!
		if let imagePath = bundle.pathForResource("Layer-14.png", ofType:nil) {
			imgLayer14 = UIImage(contentsOfFile:imagePath)
		}else {
			print("** Warning: Could not create image from 'Layer-14.png'. Please make sure that it is added to the project directly (not in a folder reference).")
		}
		layer14.image = imgLayer14
		layer14.contentMode = .Center
		layer14.layer.position = CGPoint(x:375.143, y:115.227)
		__scaling__.addSubview(layer14)
		viewsByName["Layer-14"] = layer14

		let layer15 = UIImageView()
		layer15.bounds = CGRect(x:0, y:0, width:750.0, height:230.0)
		var imgLayer15: UIImage!
		if let imagePath = bundle.pathForResource("Layer-15.png", ofType:nil) {
			imgLayer15 = UIImage(contentsOfFile:imagePath)
		}else {
			print("** Warning: Could not create image from 'Layer-15.png'. Please make sure that it is added to the project directly (not in a folder reference).")
		}
		layer15.image = imgLayer15
		layer15.contentMode = .Center
		layer15.layer.position = CGPoint(x:375.143, y:115.227)
		__scaling__.addSubview(layer15)
		viewsByName["Layer-15"] = layer15

		let layer16 = UIImageView()
		layer16.bounds = CGRect(x:0, y:0, width:750.0, height:230.0)
		var imgLayer16: UIImage!
		if let imagePath = bundle.pathForResource("Layer-16.png", ofType:nil) {
			imgLayer16 = UIImage(contentsOfFile:imagePath)
		}else {
			print("** Warning: Could not create image from 'Layer-16.png'. Please make sure that it is added to the project directly (not in a folder reference).")
		}
		layer16.image = imgLayer16
		layer16.contentMode = .Center
		layer16.layer.position = CGPoint(x:375.143, y:115.227)
		__scaling__.addSubview(layer16)
		viewsByName["Layer-16"] = layer16

		let layer17 = UIImageView()
		layer17.bounds = CGRect(x:0, y:0, width:750.0, height:230.0)
		var imgLayer17: UIImage!
		if let imagePath = bundle.pathForResource("Layer-17.png", ofType:nil) {
			imgLayer17 = UIImage(contentsOfFile:imagePath)
		}else {
			print("** Warning: Could not create image from 'Layer-17.png'. Please make sure that it is added to the project directly (not in a folder reference).")
		}
		layer17.image = imgLayer17
		layer17.contentMode = .Center
		layer17.layer.position = CGPoint(x:375.143, y:115.227)
		__scaling__.addSubview(layer17)
		viewsByName["Layer-17"] = layer17

		let layer18 = UIImageView()
		layer18.bounds = CGRect(x:0, y:0, width:750.0, height:230.0)
		var imgLayer18: UIImage!
		if let imagePath = bundle.pathForResource("Layer-18.png", ofType:nil) {
			imgLayer18 = UIImage(contentsOfFile:imagePath)
		}else {
			print("** Warning: Could not create image from 'Layer-18.png'. Please make sure that it is added to the project directly (not in a folder reference).")
		}
		layer18.image = imgLayer18
		layer18.contentMode = .Center
		layer18.layer.position = CGPoint(x:375.143, y:115.227)
		__scaling__.addSubview(layer18)
		viewsByName["Layer-18"] = layer18

		let layer19 = UIImageView()
		layer19.bounds = CGRect(x:0, y:0, width:750.0, height:230.0)
		var imgLayer19: UIImage!
		if let imagePath = bundle.pathForResource("Layer-19.png", ofType:nil) {
			imgLayer19 = UIImage(contentsOfFile:imagePath)
		}else {
			print("** Warning: Could not create image from 'Layer-19.png'. Please make sure that it is added to the project directly (not in a folder reference).")
		}
		layer19.image = imgLayer19
		layer19.contentMode = .Center
		layer19.layer.position = CGPoint(x:375.143, y:115.227)
		__scaling__.addSubview(layer19)
		viewsByName["Layer-19"] = layer19

		let layer20 = UIImageView()
		layer20.bounds = CGRect(x:0, y:0, width:750.0, height:230.0)
		var imgLayer20: UIImage!
		if let imagePath = bundle.pathForResource("Layer-20.png", ofType:nil) {
			imgLayer20 = UIImage(contentsOfFile:imagePath)
		}else {
			print("** Warning: Could not create image from 'Layer-20.png'. Please make sure that it is added to the project directly (not in a folder reference).")
		}
		layer20.image = imgLayer20
		layer20.contentMode = .Center
		layer20.layer.position = CGPoint(x:375.143, y:115.227)
		__scaling__.addSubview(layer20)
		viewsByName["Layer-20"] = layer20

		let layer21 = UIImageView()
		layer21.bounds = CGRect(x:0, y:0, width:750.0, height:230.0)
		var imgLayer21: UIImage!
		if let imagePath = bundle.pathForResource("Layer-21.png", ofType:nil) {
			imgLayer21 = UIImage(contentsOfFile:imagePath)
		}else {
			print("** Warning: Could not create image from 'Layer-21.png'. Please make sure that it is added to the project directly (not in a folder reference).")
		}
		layer21.image = imgLayer21
		layer21.contentMode = .Center
		layer21.layer.position = CGPoint(x:375.143, y:115.227)
		__scaling__.addSubview(layer21)
		viewsByName["Layer-21"] = layer21

		let layer22 = UIImageView()
		layer22.bounds = CGRect(x:0, y:0, width:750.0, height:230.0)
		var imgLayer22: UIImage!
		if let imagePath = bundle.pathForResource("Layer-22.png", ofType:nil) {
			imgLayer22 = UIImage(contentsOfFile:imagePath)
		}else {
			print("** Warning: Could not create image from 'Layer-22.png'. Please make sure that it is added to the project directly (not in a folder reference).")
		}
		layer22.image = imgLayer22
		layer22.contentMode = .Center
		layer22.layer.position = CGPoint(x:375.143, y:115.227)
		__scaling__.addSubview(layer22)
		viewsByName["Layer-22"] = layer22

		let layer23 = UIImageView()
		layer23.bounds = CGRect(x:0, y:0, width:750.0, height:230.0)
		var imgLayer23: UIImage!
		if let imagePath = bundle.pathForResource("Layer-23.png", ofType:nil) {
			imgLayer23 = UIImage(contentsOfFile:imagePath)
		}else {
			print("** Warning: Could not create image from 'Layer-23.png'. Please make sure that it is added to the project directly (not in a folder reference).")
		}
		layer23.image = imgLayer23
		layer23.contentMode = .Center
		layer23.layer.position = CGPoint(x:375.143, y:115.227)
		__scaling__.addSubview(layer23)
		viewsByName["Layer-23"] = layer23

		let layer24 = UIImageView()
		layer24.bounds = CGRect(x:0, y:0, width:750.0, height:230.0)
		var imgLayer24: UIImage!
		if let imagePath = bundle.pathForResource("Layer-24.png", ofType:nil) {
			imgLayer24 = UIImage(contentsOfFile:imagePath)
		}else {
			print("** Warning: Could not create image from 'Layer-24.png'. Please make sure that it is added to the project directly (not in a folder reference).")
		}
		layer24.image = imgLayer24
		layer24.contentMode = .Center
		layer24.layer.position = CGPoint(x:375.143, y:115.227)
		__scaling__.addSubview(layer24)
		viewsByName["Layer-24"] = layer24

		let layer25 = UIImageView()
		layer25.bounds = CGRect(x:0, y:0, width:750.0, height:230.0)
		var imgLayer25: UIImage!
		if let imagePath = bundle.pathForResource("Layer-25.png", ofType:nil) {
			imgLayer25 = UIImage(contentsOfFile:imagePath)
		}else {
			print("** Warning: Could not create image from 'Layer-25.png'. Please make sure that it is added to the project directly (not in a folder reference).")
		}
		layer25.image = imgLayer25
		layer25.contentMode = .Center
		layer25.layer.position = CGPoint(x:375.143, y:115.227)
		__scaling__.addSubview(layer25)
		viewsByName["Layer-25"] = layer25

		let layer26 = UIImageView()
		layer26.bounds = CGRect(x:0, y:0, width:750.0, height:230.0)
		var imgLayer26: UIImage!
		if let imagePath = bundle.pathForResource("Layer-26.png", ofType:nil) {
			imgLayer26 = UIImage(contentsOfFile:imagePath)
		}else {
			print("** Warning: Could not create image from 'Layer-26.png'. Please make sure that it is added to the project directly (not in a folder reference).")
		}
		layer26.image = imgLayer26
		layer26.contentMode = .Center
		layer26.layer.position = CGPoint(x:375.143, y:115.227)
		__scaling__.addSubview(layer26)
		viewsByName["Layer-26"] = layer26

		let layer27 = UIImageView()
		layer27.bounds = CGRect(x:0, y:0, width:750.0, height:230.0)
		var imgLayer27: UIImage!
		if let imagePath = bundle.pathForResource("Layer-27.png", ofType:nil) {
			imgLayer27 = UIImage(contentsOfFile:imagePath)
		}else {
			print("** Warning: Could not create image from 'Layer-27.png'. Please make sure that it is added to the project directly (not in a folder reference).")
		}
		layer27.image = imgLayer27
		layer27.contentMode = .Center
		layer27.layer.position = CGPoint(x:375.143, y:115.227)
		__scaling__.addSubview(layer27)
		viewsByName["Layer-27"] = layer27

		let layer28 = UIImageView()
		layer28.bounds = CGRect(x:0, y:0, width:750.0, height:230.0)
		var imgLayer28: UIImage!
		if let imagePath = bundle.pathForResource("Layer-28.png", ofType:nil) {
			imgLayer28 = UIImage(contentsOfFile:imagePath)
		}else {
			print("** Warning: Could not create image from 'Layer-28.png'. Please make sure that it is added to the project directly (not in a folder reference).")
		}
		layer28.image = imgLayer28
		layer28.contentMode = .Center
		layer28.layer.position = CGPoint(x:375.143, y:115.227)
		__scaling__.addSubview(layer28)
		viewsByName["Layer-28"] = layer28

		let layer29 = UIImageView()
		layer29.bounds = CGRect(x:0, y:0, width:750.0, height:230.0)
		var imgLayer29: UIImage!
		if let imagePath = bundle.pathForResource("Layer-29.png", ofType:nil) {
			imgLayer29 = UIImage(contentsOfFile:imagePath)
		}else {
			print("** Warning: Could not create image from 'Layer-29.png'. Please make sure that it is added to the project directly (not in a folder reference).")
		}
		layer29.image = imgLayer29
		layer29.contentMode = .Center
		layer29.layer.position = CGPoint(x:375.143, y:115.227)
		__scaling__.addSubview(layer29)
		viewsByName["Layer-29"] = layer29

		let layer30 = UIImageView()
		layer30.bounds = CGRect(x:0, y:0, width:750.0, height:230.0)
		var imgLayer30: UIImage!
		if let imagePath = bundle.pathForResource("Layer-30.png", ofType:nil) {
			imgLayer30 = UIImage(contentsOfFile:imagePath)
		}else {
			print("** Warning: Could not create image from 'Layer-30.png'. Please make sure that it is added to the project directly (not in a folder reference).")
		}
		layer30.image = imgLayer30
		layer30.contentMode = .Center
		layer30.layer.position = CGPoint(x:375.143, y:115.227)
		__scaling__.addSubview(layer30)
		viewsByName["Layer-30"] = layer30

		let layer31 = UIImageView()
		layer31.bounds = CGRect(x:0, y:0, width:750.0, height:230.0)
		var imgLayer31: UIImage!
		if let imagePath = bundle.pathForResource("Layer-31.png", ofType:nil) {
			imgLayer31 = UIImage(contentsOfFile:imagePath)
		}else {
			print("** Warning: Could not create image from 'Layer-31.png'. Please make sure that it is added to the project directly (not in a folder reference).")
		}
		layer31.image = imgLayer31
		layer31.contentMode = .Center
		layer31.layer.position = CGPoint(x:375.143, y:115.227)
		__scaling__.addSubview(layer31)
		viewsByName["Layer-31"] = layer31

		let layer32 = UIImageView()
		layer32.bounds = CGRect(x:0, y:0, width:750.0, height:230.0)
		var imgLayer32: UIImage!
		if let imagePath = bundle.pathForResource("Layer-32.png", ofType:nil) {
			imgLayer32 = UIImage(contentsOfFile:imagePath)
		}else {
			print("** Warning: Could not create image from 'Layer-32.png'. Please make sure that it is added to the project directly (not in a folder reference).")
		}
		layer32.image = imgLayer32
		layer32.contentMode = .Center
		layer32.layer.position = CGPoint(x:375.143, y:115.227)
		__scaling__.addSubview(layer32)
		viewsByName["Layer-32"] = layer32

		let layer33 = UIImageView()
		layer33.bounds = CGRect(x:0, y:0, width:750.0, height:230.0)
		var imgLayer33: UIImage!
		if let imagePath = bundle.pathForResource("Layer-33.png", ofType:nil) {
			imgLayer33 = UIImage(contentsOfFile:imagePath)
		}else {
			print("** Warning: Could not create image from 'Layer-33.png'. Please make sure that it is added to the project directly (not in a folder reference).")
		}
		layer33.image = imgLayer33
		layer33.contentMode = .Center
		layer33.layer.position = CGPoint(x:375.143, y:115.227)
		__scaling__.addSubview(layer33)
		viewsByName["Layer-33"] = layer33

		let layer34 = UIImageView()
		layer34.bounds = CGRect(x:0, y:0, width:750.0, height:230.0)
		var imgLayer34: UIImage!
		if let imagePath = bundle.pathForResource("Layer-34.png", ofType:nil) {
			imgLayer34 = UIImage(contentsOfFile:imagePath)
		}else {
			print("** Warning: Could not create image from 'Layer-34.png'. Please make sure that it is added to the project directly (not in a folder reference).")
		}
		layer34.image = imgLayer34
		layer34.contentMode = .Center
		layer34.layer.position = CGPoint(x:375.143, y:115.227)
		__scaling__.addSubview(layer34)
		viewsByName["Layer-34"] = layer34

		self.viewsByName = viewsByName
	}

	// - MARK: carousel_2_forward

	func addCarousel2ForwardAnimation() {
		addCarousel2ForwardAnimationWithBeginTime(0, fillMode: kCAFillModeBoth, removedOnCompletion: false, completion: nil)
	}

	func addCarousel2ForwardAnimation(completion: ((Bool) -> Void)?) {
		addCarousel2ForwardAnimationWithBeginTime(0, fillMode: kCAFillModeBoth, removedOnCompletion: false, completion: completion)
	}

	func addCarousel2ForwardAnimation(removedOnCompletion removedOnCompletion: Bool) {
		addCarousel2ForwardAnimationWithBeginTime(0, fillMode: removedOnCompletion ? kCAFillModeRemoved : kCAFillModeBoth, removedOnCompletion: removedOnCompletion, completion: nil)
	}

	func addCarousel2ForwardAnimation(removedOnCompletion removedOnCompletion: Bool, completion: ((Bool) -> Void)?) {
		addCarousel2ForwardAnimationWithBeginTime(0, fillMode: removedOnCompletion ? kCAFillModeRemoved : kCAFillModeBoth, removedOnCompletion: removedOnCompletion, completion: completion)
	}

	func addCarousel2ForwardAnimationWithBeginTime(beginTime: CFTimeInterval, fillMode: String, removedOnCompletion: Bool, completion: ((Bool) -> Void)?) {
		let linearTiming = CAMediaTimingFunction(name: kCAMediaTimingFunctionLinear)
		if let complete = completion {
			let representativeAnimation = CABasicAnimation(keyPath: "not.a.real.key")
			representativeAnimation.duration = 1.360
			representativeAnimation.delegate = self
			self.layer.addAnimation(representativeAnimation, forKey: "Carousel2Forward")
			self.animationCompletions[layer.animationForKey("Carousel2Forward")!] = complete
		}

		let layer29OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		layer29OpacityAnimation.duration = 1.360
		layer29OpacityAnimation.values = [0.000 as Float, 0.000 as Float, 1.000 as Float, 1.000 as Float]
		layer29OpacityAnimation.keyTimes = [0.000 as Float, 0.846 as Float, 0.853 as Float, 1.000 as Float]
		layer29OpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		layer29OpacityAnimation.beginTime = beginTime
		layer29OpacityAnimation.fillMode = fillMode
		layer29OpacityAnimation.removedOnCompletion = removedOnCompletion
		self.viewsByName["Layer-29"]?.layer.addAnimation(layer29OpacityAnimation, forKey:"carousel_2_forward_Opacity")

		let layer3OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		layer3OpacityAnimation.duration = 1.360
		layer3OpacityAnimation.values = [0.000 as Float, 0.000 as Float, 1.000 as Float, 1.000 as Float]
		layer3OpacityAnimation.keyTimes = [0.000 as Float, 0.081 as Float, 0.088 as Float, 1.000 as Float]
		layer3OpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		layer3OpacityAnimation.beginTime = beginTime
		layer3OpacityAnimation.fillMode = fillMode
		layer3OpacityAnimation.removedOnCompletion = removedOnCompletion
		self.viewsByName["Layer-3"]?.layer.addAnimation(layer3OpacityAnimation, forKey:"carousel_2_forward_Opacity")

		let layer32OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		layer32OpacityAnimation.duration = 1.360
		layer32OpacityAnimation.values = [0.000 as Float, 0.000 as Float, 1.000 as Float, 1.000 as Float]
		layer32OpacityAnimation.keyTimes = [0.000 as Float, 0.934 as Float, 0.941 as Float, 1.000 as Float]
		layer32OpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		layer32OpacityAnimation.beginTime = beginTime
		layer32OpacityAnimation.fillMode = fillMode
		layer32OpacityAnimation.removedOnCompletion = removedOnCompletion
		self.viewsByName["Layer-32"]?.layer.addAnimation(layer32OpacityAnimation, forKey:"carousel_2_forward_Opacity")

		let layer27OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		layer27OpacityAnimation.duration = 1.360
		layer27OpacityAnimation.values = [0.000 as Float, 0.000 as Float, 1.000 as Float, 1.000 as Float]
		layer27OpacityAnimation.keyTimes = [0.000 as Float, 0.787 as Float, 0.794 as Float, 1.000 as Float]
		layer27OpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		layer27OpacityAnimation.beginTime = beginTime
		layer27OpacityAnimation.fillMode = fillMode
		layer27OpacityAnimation.removedOnCompletion = removedOnCompletion
		self.viewsByName["Layer-27"]?.layer.addAnimation(layer27OpacityAnimation, forKey:"carousel_2_forward_Opacity")

		let layer28OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		layer28OpacityAnimation.duration = 1.360
		layer28OpacityAnimation.values = [0.000 as Float, 0.000 as Float, 1.000 as Float, 1.000 as Float]
		layer28OpacityAnimation.keyTimes = [0.000 as Float, 0.816 as Float, 0.824 as Float, 1.000 as Float]
		layer28OpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		layer28OpacityAnimation.beginTime = beginTime
		layer28OpacityAnimation.fillMode = fillMode
		layer28OpacityAnimation.removedOnCompletion = removedOnCompletion
		self.viewsByName["Layer-28"]?.layer.addAnimation(layer28OpacityAnimation, forKey:"carousel_2_forward_Opacity")

		let layer19OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		layer19OpacityAnimation.duration = 1.360
		layer19OpacityAnimation.values = [0.000 as Float, 0.000 as Float, 1.000 as Float, 1.000 as Float]
		layer19OpacityAnimation.keyTimes = [0.000 as Float, 0.551 as Float, 0.559 as Float, 1.000 as Float]
		layer19OpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		layer19OpacityAnimation.beginTime = beginTime
		layer19OpacityAnimation.fillMode = fillMode
		layer19OpacityAnimation.removedOnCompletion = removedOnCompletion
		self.viewsByName["Layer-19"]?.layer.addAnimation(layer19OpacityAnimation, forKey:"carousel_2_forward_Opacity")

		let layer34OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		layer34OpacityAnimation.duration = 1.360
		layer34OpacityAnimation.values = [0.000 as Float, 0.000 as Float, 1.000 as Float]
		layer34OpacityAnimation.keyTimes = [0.000 as Float, 0.993 as Float, 1.000 as Float]
		layer34OpacityAnimation.timingFunctions = [linearTiming, linearTiming]
		layer34OpacityAnimation.beginTime = beginTime
		layer34OpacityAnimation.fillMode = fillMode
		layer34OpacityAnimation.removedOnCompletion = removedOnCompletion
		self.viewsByName["Layer-34"]?.layer.addAnimation(layer34OpacityAnimation, forKey:"carousel_2_forward_Opacity")

		let layer2OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		layer2OpacityAnimation.duration = 1.360
		layer2OpacityAnimation.values = [0.000 as Float, 0.000 as Float, 1.000 as Float, 1.000 as Float]
		layer2OpacityAnimation.keyTimes = [0.000 as Float, 0.051 as Float, 0.059 as Float, 1.000 as Float]
		layer2OpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		layer2OpacityAnimation.beginTime = beginTime
		layer2OpacityAnimation.fillMode = fillMode
		layer2OpacityAnimation.removedOnCompletion = removedOnCompletion
		self.viewsByName["Layer-2"]?.layer.addAnimation(layer2OpacityAnimation, forKey:"carousel_2_forward_Opacity")

		let layer23OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		layer23OpacityAnimation.duration = 1.360
		layer23OpacityAnimation.values = [0.000 as Float, 0.000 as Float, 0.000 as Float]
		layer23OpacityAnimation.keyTimes = [0.000 as Float, 0.669 as Float, 1.000 as Float]
		layer23OpacityAnimation.timingFunctions = [linearTiming, linearTiming]
		layer23OpacityAnimation.beginTime = beginTime
		layer23OpacityAnimation.fillMode = fillMode
		layer23OpacityAnimation.removedOnCompletion = removedOnCompletion
		self.viewsByName["Layer-23"]?.layer.addAnimation(layer23OpacityAnimation, forKey:"carousel_2_forward_Opacity")

		let layer6OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		layer6OpacityAnimation.duration = 1.360
		layer6OpacityAnimation.values = [0.000 as Float, 0.000 as Float, 1.000 as Float, 1.000 as Float]
		layer6OpacityAnimation.keyTimes = [0.000 as Float, 0.169 as Float, 0.176 as Float, 1.000 as Float]
		layer6OpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		layer6OpacityAnimation.beginTime = beginTime
		layer6OpacityAnimation.fillMode = fillMode
		layer6OpacityAnimation.removedOnCompletion = removedOnCompletion
		self.viewsByName["Layer-6"]?.layer.addAnimation(layer6OpacityAnimation, forKey:"carousel_2_forward_Opacity")

		let layer20OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		layer20OpacityAnimation.duration = 1.360
		layer20OpacityAnimation.values = [0.000 as Float, 0.000 as Float, 1.000 as Float, 1.000 as Float]
		layer20OpacityAnimation.keyTimes = [0.000 as Float, 0.581 as Float, 0.588 as Float, 1.000 as Float]
		layer20OpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		layer20OpacityAnimation.beginTime = beginTime
		layer20OpacityAnimation.fillMode = fillMode
		layer20OpacityAnimation.removedOnCompletion = removedOnCompletion
		self.viewsByName["Layer-20"]?.layer.addAnimation(layer20OpacityAnimation, forKey:"carousel_2_forward_Opacity")

		let layer31OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		layer31OpacityAnimation.duration = 1.360
		layer31OpacityAnimation.values = [0.000 as Float, 0.000 as Float, 1.000 as Float, 1.000 as Float]
		layer31OpacityAnimation.keyTimes = [0.000 as Float, 0.904 as Float, 0.912 as Float, 1.000 as Float]
		layer31OpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		layer31OpacityAnimation.beginTime = beginTime
		layer31OpacityAnimation.fillMode = fillMode
		layer31OpacityAnimation.removedOnCompletion = removedOnCompletion
		self.viewsByName["Layer-31"]?.layer.addAnimation(layer31OpacityAnimation, forKey:"carousel_2_forward_Opacity")

		let layer7OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		layer7OpacityAnimation.duration = 1.360
		layer7OpacityAnimation.values = [0.000 as Float, 0.000 as Float, 1.000 as Float, 1.000 as Float]
		layer7OpacityAnimation.keyTimes = [0.000 as Float, 0.199 as Float, 0.206 as Float, 1.000 as Float]
		layer7OpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		layer7OpacityAnimation.beginTime = beginTime
		layer7OpacityAnimation.fillMode = fillMode
		layer7OpacityAnimation.removedOnCompletion = removedOnCompletion
		self.viewsByName["Layer-7"]?.layer.addAnimation(layer7OpacityAnimation, forKey:"carousel_2_forward_Opacity")

		let layer4OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		layer4OpacityAnimation.duration = 1.360
		layer4OpacityAnimation.values = [0.000 as Float, 0.000 as Float, 1.000 as Float, 1.000 as Float]
		layer4OpacityAnimation.keyTimes = [0.000 as Float, 0.110 as Float, 0.118 as Float, 1.000 as Float]
		layer4OpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		layer4OpacityAnimation.beginTime = beginTime
		layer4OpacityAnimation.fillMode = fillMode
		layer4OpacityAnimation.removedOnCompletion = removedOnCompletion
		self.viewsByName["Layer-4"]?.layer.addAnimation(layer4OpacityAnimation, forKey:"carousel_2_forward_Opacity")

		let layer8OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		layer8OpacityAnimation.duration = 1.360
		layer8OpacityAnimation.values = [0.000 as Float, 0.000 as Float, 1.000 as Float, 1.000 as Float]
		layer8OpacityAnimation.keyTimes = [0.000 as Float, 0.228 as Float, 0.235 as Float, 1.000 as Float]
		layer8OpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		layer8OpacityAnimation.beginTime = beginTime
		layer8OpacityAnimation.fillMode = fillMode
		layer8OpacityAnimation.removedOnCompletion = removedOnCompletion
		self.viewsByName["Layer-8"]?.layer.addAnimation(layer8OpacityAnimation, forKey:"carousel_2_forward_Opacity")

		let layer25OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		layer25OpacityAnimation.duration = 1.360
		layer25OpacityAnimation.values = [0.000 as Float, 0.000 as Float, 1.000 as Float, 1.000 as Float]
		layer25OpacityAnimation.keyTimes = [0.000 as Float, 0.728 as Float, 0.735 as Float, 1.000 as Float]
		layer25OpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		layer25OpacityAnimation.beginTime = beginTime
		layer25OpacityAnimation.fillMode = fillMode
		layer25OpacityAnimation.removedOnCompletion = removedOnCompletion
		self.viewsByName["Layer-25"]?.layer.addAnimation(layer25OpacityAnimation, forKey:"carousel_2_forward_Opacity")

		let layer21OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		layer21OpacityAnimation.duration = 1.360
		layer21OpacityAnimation.values = [0.000 as Float, 0.000 as Float, 1.000 as Float, 1.000 as Float]
		layer21OpacityAnimation.keyTimes = [0.000 as Float, 0.610 as Float, 0.618 as Float, 1.000 as Float]
		layer21OpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		layer21OpacityAnimation.beginTime = beginTime
		layer21OpacityAnimation.fillMode = fillMode
		layer21OpacityAnimation.removedOnCompletion = removedOnCompletion
		self.viewsByName["Layer-21"]?.layer.addAnimation(layer21OpacityAnimation, forKey:"carousel_2_forward_Opacity")

		let layer15OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		layer15OpacityAnimation.duration = 1.360
		layer15OpacityAnimation.values = [0.000 as Float, 0.000 as Float, 1.000 as Float, 1.000 as Float]
		layer15OpacityAnimation.keyTimes = [0.000 as Float, 0.434 as Float, 0.441 as Float, 1.000 as Float]
		layer15OpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		layer15OpacityAnimation.beginTime = beginTime
		layer15OpacityAnimation.fillMode = fillMode
		layer15OpacityAnimation.removedOnCompletion = removedOnCompletion
		self.viewsByName["Layer-15"]?.layer.addAnimation(layer15OpacityAnimation, forKey:"carousel_2_forward_Opacity")

		let layer16OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		layer16OpacityAnimation.duration = 1.360
		layer16OpacityAnimation.values = [0.000 as Float, 0.000 as Float, 1.000 as Float, 1.000 as Float]
		layer16OpacityAnimation.keyTimes = [0.000 as Float, 0.463 as Float, 0.471 as Float, 1.000 as Float]
		layer16OpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		layer16OpacityAnimation.beginTime = beginTime
		layer16OpacityAnimation.fillMode = fillMode
		layer16OpacityAnimation.removedOnCompletion = removedOnCompletion
		self.viewsByName["Layer-16"]?.layer.addAnimation(layer16OpacityAnimation, forKey:"carousel_2_forward_Opacity")

		let layer11OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		layer11OpacityAnimation.duration = 1.360
		layer11OpacityAnimation.values = [0.000 as Float, 0.000 as Float, 1.000 as Float, 1.000 as Float]
		layer11OpacityAnimation.keyTimes = [0.000 as Float, 0.316 as Float, 0.324 as Float, 1.000 as Float]
		layer11OpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		layer11OpacityAnimation.beginTime = beginTime
		layer11OpacityAnimation.fillMode = fillMode
		layer11OpacityAnimation.removedOnCompletion = removedOnCompletion
		self.viewsByName["Layer-11"]?.layer.addAnimation(layer11OpacityAnimation, forKey:"carousel_2_forward_Opacity")

		let layer30OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		layer30OpacityAnimation.duration = 1.360
		layer30OpacityAnimation.values = [0.000 as Float, 0.000 as Float, 0.000 as Float, 0.000 as Float]
		layer30OpacityAnimation.keyTimes = [0.000 as Float, 0.875 as Float, 0.882 as Float, 1.000 as Float]
		layer30OpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		layer30OpacityAnimation.beginTime = beginTime
		layer30OpacityAnimation.fillMode = fillMode
		layer30OpacityAnimation.removedOnCompletion = removedOnCompletion
		self.viewsByName["Layer-30"]?.layer.addAnimation(layer30OpacityAnimation, forKey:"carousel_2_forward_Opacity")

		let layer13OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		layer13OpacityAnimation.duration = 1.360
		layer13OpacityAnimation.values = [0.000 as Float, 0.000 as Float, 1.000 as Float, 1.000 as Float]
		layer13OpacityAnimation.keyTimes = [0.000 as Float, 0.375 as Float, 0.382 as Float, 1.000 as Float]
		layer13OpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		layer13OpacityAnimation.beginTime = beginTime
		layer13OpacityAnimation.fillMode = fillMode
		layer13OpacityAnimation.removedOnCompletion = removedOnCompletion
		self.viewsByName["Layer-13"]?.layer.addAnimation(layer13OpacityAnimation, forKey:"carousel_2_forward_Opacity")

		let layer17OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		layer17OpacityAnimation.duration = 1.360
		layer17OpacityAnimation.values = [0.000 as Float, 0.000 as Float, 1.000 as Float, 1.000 as Float]
		layer17OpacityAnimation.keyTimes = [0.000 as Float, 0.493 as Float, 0.500 as Float, 1.000 as Float]
		layer17OpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		layer17OpacityAnimation.beginTime = beginTime
		layer17OpacityAnimation.fillMode = fillMode
		layer17OpacityAnimation.removedOnCompletion = removedOnCompletion
		self.viewsByName["Layer-17"]?.layer.addAnimation(layer17OpacityAnimation, forKey:"carousel_2_forward_Opacity")

		let layer12OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		layer12OpacityAnimation.duration = 1.360
		layer12OpacityAnimation.values = [0.000 as Float, 0.000 as Float, 1.000 as Float, 1.000 as Float]
		layer12OpacityAnimation.keyTimes = [0.000 as Float, 0.346 as Float, 0.353 as Float, 1.000 as Float]
		layer12OpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		layer12OpacityAnimation.beginTime = beginTime
		layer12OpacityAnimation.fillMode = fillMode
		layer12OpacityAnimation.removedOnCompletion = removedOnCompletion
		self.viewsByName["Layer-12"]?.layer.addAnimation(layer12OpacityAnimation, forKey:"carousel_2_forward_Opacity")

		let layer1OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		layer1OpacityAnimation.duration = 1.360
		layer1OpacityAnimation.values = [1.000 as Float, 0.000 as Float, 0.000 as Float]
		layer1OpacityAnimation.keyTimes = [0.000 as Float, 0.029 as Float, 1.000 as Float]
		layer1OpacityAnimation.timingFunctions = [linearTiming, linearTiming]
		layer1OpacityAnimation.beginTime = beginTime
		layer1OpacityAnimation.fillMode = fillMode
		layer1OpacityAnimation.removedOnCompletion = removedOnCompletion
		self.viewsByName["Layer-1"]?.layer.addAnimation(layer1OpacityAnimation, forKey:"carousel_2_forward_Opacity")

		let layer24OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		layer24OpacityAnimation.duration = 1.360
		layer24OpacityAnimation.values = [0.000 as Float, 0.000 as Float, 1.000 as Float, 1.000 as Float]
		layer24OpacityAnimation.keyTimes = [0.000 as Float, 0.699 as Float, 0.706 as Float, 1.000 as Float]
		layer24OpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		layer24OpacityAnimation.beginTime = beginTime
		layer24OpacityAnimation.fillMode = fillMode
		layer24OpacityAnimation.removedOnCompletion = removedOnCompletion
		self.viewsByName["Layer-24"]?.layer.addAnimation(layer24OpacityAnimation, forKey:"carousel_2_forward_Opacity")

		let layer22OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		layer22OpacityAnimation.duration = 1.360
		layer22OpacityAnimation.values = [0.000 as Float, 0.000 as Float, 1.000 as Float, 1.000 as Float]
		layer22OpacityAnimation.keyTimes = [0.000 as Float, 0.640 as Float, 0.647 as Float, 1.000 as Float]
		layer22OpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		layer22OpacityAnimation.beginTime = beginTime
		layer22OpacityAnimation.fillMode = fillMode
		layer22OpacityAnimation.removedOnCompletion = removedOnCompletion
		self.viewsByName["Layer-22"]?.layer.addAnimation(layer22OpacityAnimation, forKey:"carousel_2_forward_Opacity")

		let layer9OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		layer9OpacityAnimation.duration = 1.360
		layer9OpacityAnimation.values = [0.000 as Float, 0.000 as Float, 1.000 as Float, 1.000 as Float]
		layer9OpacityAnimation.keyTimes = [0.000 as Float, 0.257 as Float, 0.265 as Float, 1.000 as Float]
		layer9OpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		layer9OpacityAnimation.beginTime = beginTime
		layer9OpacityAnimation.fillMode = fillMode
		layer9OpacityAnimation.removedOnCompletion = removedOnCompletion
		self.viewsByName["Layer-9"]?.layer.addAnimation(layer9OpacityAnimation, forKey:"carousel_2_forward_Opacity")

		let layer18OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		layer18OpacityAnimation.duration = 1.360
		layer18OpacityAnimation.values = [0.000 as Float, 0.000 as Float, 1.000 as Float, 1.000 as Float]
		layer18OpacityAnimation.keyTimes = [0.000 as Float, 0.522 as Float, 0.529 as Float, 1.000 as Float]
		layer18OpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		layer18OpacityAnimation.beginTime = beginTime
		layer18OpacityAnimation.fillMode = fillMode
		layer18OpacityAnimation.removedOnCompletion = removedOnCompletion
		self.viewsByName["Layer-18"]?.layer.addAnimation(layer18OpacityAnimation, forKey:"carousel_2_forward_Opacity")

		let layer33OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		layer33OpacityAnimation.duration = 1.360
		layer33OpacityAnimation.values = [0.000 as Float, 0.000 as Float, 1.000 as Float, 1.000 as Float]
		layer33OpacityAnimation.keyTimes = [0.000 as Float, 0.963 as Float, 0.971 as Float, 1.000 as Float]
		layer33OpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		layer33OpacityAnimation.beginTime = beginTime
		layer33OpacityAnimation.fillMode = fillMode
		layer33OpacityAnimation.removedOnCompletion = removedOnCompletion
		self.viewsByName["Layer-33"]?.layer.addAnimation(layer33OpacityAnimation, forKey:"carousel_2_forward_Opacity")

		let layer26OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		layer26OpacityAnimation.duration = 1.360
		layer26OpacityAnimation.values = [0.000 as Float, 0.000 as Float, 1.000 as Float, 1.000 as Float]
		layer26OpacityAnimation.keyTimes = [0.000 as Float, 0.757 as Float, 0.765 as Float, 1.000 as Float]
		layer26OpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		layer26OpacityAnimation.beginTime = beginTime
		layer26OpacityAnimation.fillMode = fillMode
		layer26OpacityAnimation.removedOnCompletion = removedOnCompletion
		self.viewsByName["Layer-26"]?.layer.addAnimation(layer26OpacityAnimation, forKey:"carousel_2_forward_Opacity")

		let layer14OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		layer14OpacityAnimation.duration = 1.360
		layer14OpacityAnimation.values = [0.000 as Float, 0.000 as Float, 1.000 as Float, 1.000 as Float]
		layer14OpacityAnimation.keyTimes = [0.000 as Float, 0.404 as Float, 0.412 as Float, 1.000 as Float]
		layer14OpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		layer14OpacityAnimation.beginTime = beginTime
		layer14OpacityAnimation.fillMode = fillMode
		layer14OpacityAnimation.removedOnCompletion = removedOnCompletion
		self.viewsByName["Layer-14"]?.layer.addAnimation(layer14OpacityAnimation, forKey:"carousel_2_forward_Opacity")

		let layer5OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		layer5OpacityAnimation.duration = 1.360
		layer5OpacityAnimation.values = [0.000 as Float, 0.000 as Float, 1.000 as Float, 1.000 as Float]
		layer5OpacityAnimation.keyTimes = [0.000 as Float, 0.140 as Float, 0.147 as Float, 1.000 as Float]
		layer5OpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		layer5OpacityAnimation.beginTime = beginTime
		layer5OpacityAnimation.fillMode = fillMode
		layer5OpacityAnimation.removedOnCompletion = removedOnCompletion
		self.viewsByName["Layer-5"]?.layer.addAnimation(layer5OpacityAnimation, forKey:"carousel_2_forward_Opacity")

		let layer10OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		layer10OpacityAnimation.duration = 1.360
		layer10OpacityAnimation.values = [0.000 as Float, 0.000 as Float, 1.000 as Float, 1.000 as Float]
		layer10OpacityAnimation.keyTimes = [0.000 as Float, 0.287 as Float, 0.294 as Float, 1.000 as Float]
		layer10OpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		layer10OpacityAnimation.beginTime = beginTime
		layer10OpacityAnimation.fillMode = fillMode
		layer10OpacityAnimation.removedOnCompletion = removedOnCompletion
		self.viewsByName["Layer-10"]?.layer.addAnimation(layer10OpacityAnimation, forKey:"carousel_2_forward_Opacity")
	}

	func removeCarousel2ForwardAnimation() {
		self.layer.removeAnimationForKey("Carousel2Forward")
		self.viewsByName["Layer-29"]?.layer.removeAnimationForKey("carousel_2_forward_Opacity")
		self.viewsByName["Layer-3"]?.layer.removeAnimationForKey("carousel_2_forward_Opacity")
		self.viewsByName["Layer-32"]?.layer.removeAnimationForKey("carousel_2_forward_Opacity")
		self.viewsByName["Layer-27"]?.layer.removeAnimationForKey("carousel_2_forward_Opacity")
		self.viewsByName["Layer-28"]?.layer.removeAnimationForKey("carousel_2_forward_Opacity")
		self.viewsByName["Layer-19"]?.layer.removeAnimationForKey("carousel_2_forward_Opacity")
		self.viewsByName["Layer-34"]?.layer.removeAnimationForKey("carousel_2_forward_Opacity")
		self.viewsByName["Layer-2"]?.layer.removeAnimationForKey("carousel_2_forward_Opacity")
		self.viewsByName["Layer-23"]?.layer.removeAnimationForKey("carousel_2_forward_Opacity")
		self.viewsByName["Layer-6"]?.layer.removeAnimationForKey("carousel_2_forward_Opacity")
		self.viewsByName["Layer-20"]?.layer.removeAnimationForKey("carousel_2_forward_Opacity")
		self.viewsByName["Layer-31"]?.layer.removeAnimationForKey("carousel_2_forward_Opacity")
		self.viewsByName["Layer-7"]?.layer.removeAnimationForKey("carousel_2_forward_Opacity")
		self.viewsByName["Layer-4"]?.layer.removeAnimationForKey("carousel_2_forward_Opacity")
		self.viewsByName["Layer-8"]?.layer.removeAnimationForKey("carousel_2_forward_Opacity")
		self.viewsByName["Layer-25"]?.layer.removeAnimationForKey("carousel_2_forward_Opacity")
		self.viewsByName["Layer-21"]?.layer.removeAnimationForKey("carousel_2_forward_Opacity")
		self.viewsByName["Layer-15"]?.layer.removeAnimationForKey("carousel_2_forward_Opacity")
		self.viewsByName["Layer-16"]?.layer.removeAnimationForKey("carousel_2_forward_Opacity")
		self.viewsByName["Layer-11"]?.layer.removeAnimationForKey("carousel_2_forward_Opacity")
		self.viewsByName["Layer-30"]?.layer.removeAnimationForKey("carousel_2_forward_Opacity")
		self.viewsByName["Layer-13"]?.layer.removeAnimationForKey("carousel_2_forward_Opacity")
		self.viewsByName["Layer-17"]?.layer.removeAnimationForKey("carousel_2_forward_Opacity")
		self.viewsByName["Layer-12"]?.layer.removeAnimationForKey("carousel_2_forward_Opacity")
		self.viewsByName["Layer-1"]?.layer.removeAnimationForKey("carousel_2_forward_Opacity")
		self.viewsByName["Layer-24"]?.layer.removeAnimationForKey("carousel_2_forward_Opacity")
		self.viewsByName["Layer-22"]?.layer.removeAnimationForKey("carousel_2_forward_Opacity")
		self.viewsByName["Layer-9"]?.layer.removeAnimationForKey("carousel_2_forward_Opacity")
		self.viewsByName["Layer-18"]?.layer.removeAnimationForKey("carousel_2_forward_Opacity")
		self.viewsByName["Layer-33"]?.layer.removeAnimationForKey("carousel_2_forward_Opacity")
		self.viewsByName["Layer-26"]?.layer.removeAnimationForKey("carousel_2_forward_Opacity")
		self.viewsByName["Layer-14"]?.layer.removeAnimationForKey("carousel_2_forward_Opacity")
		self.viewsByName["Layer-5"]?.layer.removeAnimationForKey("carousel_2_forward_Opacity")
		self.viewsByName["Layer-10"]?.layer.removeAnimationForKey("carousel_2_forward_Opacity")
	}

	override func animationDidStop(anim: CAAnimation, finished flag: Bool) {
		if let completion = self.animationCompletions[anim] {
			self.animationCompletions.removeValueForKey(anim)
			completion(flag)
		}
	}

	func removeAllAnimations() {
		for subview in viewsByName.values {
			subview.layer.removeAllAnimations()
		}
		self.layer.removeAnimationForKey("Carousel2Forward")
	}
}